{
	"id": "a51b1981-e9ba-4547-b9be-b4e9b9e01920",
	"name": "marina-api",
	"allTests": [],
	"timestamp": "2018-02-01T17:36:28.200Z",
	"collection_id": "213bf9b8-8fcb-e0b4-c2db-b04a2dc52064",
	"folder_id": 0,
	"target_type": "collection",
	"environment_id": "b0060060-efe4-29f6-706c-ffce87bbb2f7",
	"data": [],
	"delay": 0,
	"count": 5,
	"collection": {
		"id": "213bf9b8-8fcb-e0b4-c2db-b04a2dc52064",
		"name": "marina-api",
		"description": "",
		"order": [],
		"folders": [
			{
				"auth": null,
				"collection": "213bf9b8-8fcb-e0b4-c2db-b04a2dc52064",
				"collectionId": "213bf9b8-8fcb-e0b4-c2db-b04a2dc52064",
				"collection_id": "213bf9b8-8fcb-e0b4-c2db-b04a2dc52064",
				"createdAt": 1517278857140,
				"description": "",
				"events": [
					{
						"listen": "prerequest",
						"script": {
							"exec": [
								""
							],
							"id": "1e34c564-eec2-433b-b506-720cf8cff63c",
							"type": "text/javascript"
						}
					},
					{
						"listen": "test",
						"script": {
							"exec": [
								""
							],
							"id": "744eed82-2e76-4d3d-a7fc-c2410f8d9c76",
							"type": "text/javascript"
						}
					}
				],
				"folders_order": [],
				"id": "6ab21dd2-4140-5f56-b84a-6384a61a2d15",
				"name": "Boat Arrival 1",
				"order": [
					"6c84deed-3cdd-357c-f6a5-340ddacee66e",
					"224efce3-4487-cdfb-0318-d3b482ce81c5",
					"b3ea3daf-5d84-2660-15dc-3012bb7a8663",
					"0c21f5c8-fb89-1010-6638-6dba93ca41a5",
					"c32c750c-91a0-0376-8aec-0d14b6b82677",
					"a40f02b8-efb9-e815-a00a-864f72bfdacc"
				],
				"owner": "1242759",
				"timestamp": null,
				"updatedAt": 1517278857140
			},
			{
				"auth": null,
				"collection": "213bf9b8-8fcb-e0b4-c2db-b04a2dc52064",
				"collectionId": "213bf9b8-8fcb-e0b4-c2db-b04a2dc52064",
				"collection_id": "213bf9b8-8fcb-e0b4-c2db-b04a2dc52064",
				"createdAt": 1517341742433,
				"description": "",
				"folders_order": [],
				"id": "8a7c8e96-bae4-8e37-b328-fcae629ddf02",
				"name": "Boat Departure 1",
				"order": [
					"5a0e64e5-0ecc-02a8-cb60-f92f7717c1f0",
					"30ed4fd5-a3af-f807-3a0b-97250108c482"
				],
				"owner": "1242759",
				"updatedAt": 1517341742433
			},
			{
				"auth": null,
				"collection": "213bf9b8-8fcb-e0b4-c2db-b04a2dc52064",
				"collectionId": "213bf9b8-8fcb-e0b4-c2db-b04a2dc52064",
				"collection_id": "213bf9b8-8fcb-e0b4-c2db-b04a2dc52064",
				"createdAt": 1517198695713,
				"description": "",
				"folders_order": [],
				"id": "23a9a53c-5d35-d04b-ea8f-8636cfcccd6d",
				"name": "Create & Read Boat",
				"order": [
					"65bcc712-a13b-5098-0187-cc247689be3c",
					"1a877e77-c279-bd6e-a25b-0b1b7b705a0a",
					"1471d4db-7124-b366-4097-66b429748415",
					"ffe399bf-fb96-99ba-c420-d39219e7ca27",
					"638243e8-97db-47a8-588e-b16b17662f10"
				],
				"owner": "1242759",
				"updatedAt": 1517198695713
			},
			{
				"auth": null,
				"collection": "213bf9b8-8fcb-e0b4-c2db-b04a2dc52064",
				"collectionId": "213bf9b8-8fcb-e0b4-c2db-b04a2dc52064",
				"collection_id": "213bf9b8-8fcb-e0b4-c2db-b04a2dc52064",
				"createdAt": 1517198695713,
				"description": "",
				"events": [
					{
						"listen": "prerequest",
						"script": {
							"exec": [
								""
							],
							"id": "45a7fe16-16de-43d5-9115-f0956bb31a5a",
							"type": "text/javascript"
						}
					},
					{
						"listen": "test",
						"script": {
							"exec": [
								""
							],
							"id": "fc49f882-a598-44dc-ad1b-0d9d5c1b685b",
							"type": "text/javascript"
						}
					}
				],
				"folders_order": [],
				"id": "ed51b1ac-d686-31e5-7108-54a80f622bbd",
				"name": "Create & Read Slips",
				"order": [
					"1b0f49bc-3878-2160-eaa6-558dc7fae17b",
					"0f50a39c-e3c1-6a6c-5865-e5f1e7d652c2",
					"574eac10-2771-8ca4-7d3e-99f05373451f",
					"793fcb1c-bef2-d152-0858-651602166dc0",
					"85e0f58b-3a33-9597-830a-8c655e6dfda7"
				],
				"owner": "1242759",
				"updatedAt": 1517198695713
			},
			{
				"auth": null,
				"collection": "213bf9b8-8fcb-e0b4-c2db-b04a2dc52064",
				"collectionId": "213bf9b8-8fcb-e0b4-c2db-b04a2dc52064",
				"collection_id": "213bf9b8-8fcb-e0b4-c2db-b04a2dc52064",
				"createdAt": 1517417287187,
				"description": "",
				"events": [
					{
						"listen": "prerequest",
						"script": {
							"exec": [
								""
							],
							"id": "747a6efb-c69a-4140-b2d7-79c5fca50370",
							"type": "text/javascript"
						}
					},
					{
						"listen": "test",
						"script": {
							"exec": [
								""
							],
							"id": "0157a895-3af4-454b-9061-690ed6d2f8df",
							"type": "text/javascript"
						}
					}
				],
				"folders_order": [],
				"id": "eb40a176-024a-a40f-4b17-2a542f6dc408",
				"name": "Create Rejections",
				"order": [
					"bf0738ab-78d7-1ecf-8e2c-e7fd2f9d8361",
					"799c9c3d-0ba9-8dc1-0002-4ae7cb2adcc3",
					"48eb54ae-2f37-a672-827d-4a19fa86148a",
					"1b39ad28-302e-1fda-9a3a-ad7e4788f21f",
					"242117f3-e072-1ad9-eeb6-e6bbee009564",
					"3f82d081-8600-cb8f-1c11-a60ff7953f8d",
					"7cb2638d-1011-5f26-2220-d55cdf64642a",
					"5e3cd318-aa7c-d2bd-05a0-a6e1b308e965",
					"291f9012-9c21-2a6c-e728-6820cd8a4e43",
					"6586f52e-0ca8-42be-49b8-432183f2de64",
					"cc826b2e-8d1f-f4d4-a2f3-b22e721c4cd4",
					"10e67dac-fa94-69da-8492-15366fe0a788",
					"79eb9bdd-e846-8c59-3011-1958535b0486",
					"11d95291-802a-7e84-a762-0933a852e676",
					"2233d0fd-1dd1-cdf1-8434-4a3bdf106e62",
					"b334c6dc-9a92-155b-0639-917e68a968ea",
					"af12af81-d7ec-99bf-53d5-29e559d7cfe7",
					"9ac03fed-6b33-8e35-9eda-9ba3df3e770d"
				],
				"owner": "1242759",
				"timestamp": null,
				"updatedAt": 1517417287187
			},
			{
				"auth": null,
				"collection": "213bf9b8-8fcb-e0b4-c2db-b04a2dc52064",
				"collectionId": "213bf9b8-8fcb-e0b4-c2db-b04a2dc52064",
				"collection_id": "213bf9b8-8fcb-e0b4-c2db-b04a2dc52064",
				"createdAt": 1517419940539,
				"description": "",
				"folders_order": [],
				"id": "e933025b-0bf0-b633-64d9-5485a863c73a",
				"name": "Docked Boat is Deleted",
				"order": [],
				"owner": "1242759",
				"updatedAt": 1517419940540
			},
			{
				"auth": null,
				"collection": "213bf9b8-8fcb-e0b4-c2db-b04a2dc52064",
				"collectionId": "213bf9b8-8fcb-e0b4-c2db-b04a2dc52064",
				"collection_id": "213bf9b8-8fcb-e0b4-c2db-b04a2dc52064",
				"createdAt": 1517198710864,
				"description": "",
				"folders_order": [],
				"id": "73d3ced0-d724-d364-20f0-197d39c5329a",
				"name": "Edit Boat",
				"order": [
					"7005fe70-5f2d-54bb-f48c-5c027182e977",
					"f641ac7e-e721-9e9d-0b09-53b36e3f2c63"
				],
				"owner": "1242759",
				"updatedAt": 1517198710864
			},
			{
				"auth": null,
				"collection": "213bf9b8-8fcb-e0b4-c2db-b04a2dc52064",
				"collectionId": "213bf9b8-8fcb-e0b4-c2db-b04a2dc52064",
				"collection_id": "213bf9b8-8fcb-e0b4-c2db-b04a2dc52064",
				"createdAt": 1517198710864,
				"description": "",
				"events": [
					{
						"listen": "prerequest",
						"script": {
							"exec": [
								""
							],
							"id": "32401f68-7770-411a-a6d3-72e910a24814",
							"type": "text/javascript"
						}
					},
					{
						"listen": "test",
						"script": {
							"exec": [
								""
							],
							"id": "5bc1349b-bcbb-4807-969f-489da73a6433",
							"type": "text/javascript"
						}
					}
				],
				"folders_order": [],
				"id": "49375ed4-bf5c-0f0e-edf1-c0fabe6b7c93",
				"name": "Edit Slip",
				"order": [
					"94bbb092-fadf-f277-e294-510870911203",
					"e1708caa-e2b3-f3fd-3889-ae31d71d1870"
				],
				"owner": "1242759",
				"updatedAt": 1517198710864
			},
			{
				"auth": null,
				"collection": "213bf9b8-8fcb-e0b4-c2db-b04a2dc52064",
				"collectionId": "213bf9b8-8fcb-e0b4-c2db-b04a2dc52064",
				"collection_id": "213bf9b8-8fcb-e0b4-c2db-b04a2dc52064",
				"createdAt": 1517278857140,
				"description": "",
				"events": [
					{
						"listen": "prerequest",
						"script": {
							"exec": [
								""
							],
							"id": "1e34c564-eec2-433b-b506-720cf8cff63c",
							"type": "text/javascript"
						}
					},
					{
						"listen": "test",
						"script": {
							"exec": [
								""
							],
							"id": "744eed82-2e76-4d3d-a7fc-c2410f8d9c76",
							"type": "text/javascript"
						}
					}
				],
				"folders_order": [],
				"id": "cd0872b2-c917-29fd-b36f-877b7c822ea0",
				"name": "Occupied Slip Delete",
				"order": [
					"a8aaa458-4f18-d7c4-b460-9fa88cfdd5bf",
					"e66406c4-97a4-66aa-0551-0f3a00ed19e1",
					"4956e253-33af-68a9-9f57-ed9522b2d7d5",
					"880c6673-2af3-e350-a8de-55c3944297c1",
					"005a3f63-35a3-3f2f-d55d-822cf1df6741",
					"f48a5e5b-b76c-e19f-1be9-035eaaba0dd4"
				],
				"owner": "1242759",
				"updatedAt": 1517278857140
			},
			{
				"auth": null,
				"collection": "213bf9b8-8fcb-e0b4-c2db-b04a2dc52064",
				"collectionId": "213bf9b8-8fcb-e0b4-c2db-b04a2dc52064",
				"collection_id": "213bf9b8-8fcb-e0b4-c2db-b04a2dc52064",
				"createdAt": 1517236501836,
				"description": "",
				"folders_order": [],
				"id": "d8f6b6b9-083d-8cb3-81f6-1334bb5a2fc0",
				"name": "Pre-Clean",
				"order": [
					"5012d7a8-1c75-5cf3-1fb4-54fa8f04cee7",
					"68e02598-88d4-2d47-4311-84043dae7bf4",
					"c1862c74-dd0d-f163-3792-1987b035a9b2",
					"92b72bbf-53ec-91c8-7956-feffedf85c55"
				],
				"owner": "1242759",
				"updatedAt": 1517236501836
			},
			{
				"auth": null,
				"collection": "213bf9b8-8fcb-e0b4-c2db-b04a2dc52064",
				"collectionId": "213bf9b8-8fcb-e0b4-c2db-b04a2dc52064",
				"collection_id": "213bf9b8-8fcb-e0b4-c2db-b04a2dc52064",
				"createdAt": 1517431628164,
				"description": "",
				"folders_order": [],
				"id": "86021102-4586-7ec3-a1b0-2f7973f70aea",
				"name": "Read 1 Rejections",
				"order": [
					"3e0cabbc-97da-a5e2-9040-cea9765a7be6",
					"ee606220-9492-f505-9bb7-a3a4ebf16de0",
					"784cb22c-9f2a-b0f2-458d-593d333b1e4a",
					"3ef77eb5-e79b-d713-8510-063f5452d4c6",
					"59fbe851-2e79-2eb9-59f3-5fe2570a8e7f",
					"230a57f3-e0db-d13e-9ae7-6ed2ff4c335c"
				],
				"owner": "1242759",
				"updatedAt": 1517431628164
			},
			{
				"auth": null,
				"collection": "213bf9b8-8fcb-e0b4-c2db-b04a2dc52064",
				"collectionId": "213bf9b8-8fcb-e0b4-c2db-b04a2dc52064",
				"collection_id": "213bf9b8-8fcb-e0b4-c2db-b04a2dc52064",
				"createdAt": 1517433021359,
				"description": "",
				"events": [
					{
						"listen": "prerequest",
						"script": {
							"exec": [
								"// Set environmental variables.",
								"// PRE-VALUES",
								"pm.environment.set(\"name\", \"Boat Name\");",
								"pm.environment.set(\"type\", \"Boat Type\");",
								"pm.environment.set(\"length\", \"10\");",
								"",
								"pm.environment.set(\"number\", \"17\");",
								"",
								"pm.environment.set(\"fake_id\", \"asdf1234\");",
								"",
								"pm.environment.set(\"false_at_sea\", false);",
								"pm.environment.set(\"true_at_sea\", true);"
							],
							"id": "954eb6ac-c95b-455d-8559-f424c6fcd264",
							"type": "text/javascript"
						}
					},
					{
						"listen": "test",
						"script": {
							"exec": [
								""
							],
							"id": "9a9c873e-75fb-494b-bdc0-9fa9febdef97",
							"type": "text/javascript"
						}
					}
				],
				"folders_order": [],
				"id": "99bf3de1-d782-057d-2b5a-c5168264367a",
				"name": "Update Rejections",
				"order": [
					"7ce51c42-3d31-85e0-e5b5-59b2dcf4be53",
					"dc761673-648f-bf3a-3635-49f06c7538c4",
					"2b88311a-c5ff-cbbb-3d00-3a650e6521b0",
					"c2f7446f-6d6d-1178-b7df-94ced31f5733",
					"fdfa7793-2127-ef7d-3028-aaae98af7856",
					"d10748ff-8105-071c-abb5-30bbbec709bc",
					"449e63e6-d97d-5106-0587-b7ca93b4b887",
					"e0020c68-d9c8-be7c-8bc3-ba665dbc3d52",
					"63207568-8aa6-a081-88a5-7a8b4b2c5fb3",
					"556b949b-2ec2-73a0-c879-aeb34646fad2",
					"44cc6da5-e4c6-6a9a-963c-a6ae835dadfe",
					"0cdc704a-51c0-c7dc-fa37-af168b756d8d",
					"2f2d0eec-fec0-919c-463e-9ba77b558ee2",
					"b54001cb-492d-1a3d-51b9-ca7d7f110d33",
					"eabd2c64-09b8-bccf-96f9-edc2293969d2",
					"3310d785-245f-011e-6040-bef0b42694f8"
				],
				"owner": "1242759",
				"updatedAt": 1517433021359
			}
		],
		"folders_order": [
			"d8f6b6b9-083d-8cb3-81f6-1334bb5a2fc0",
			"23a9a53c-5d35-d04b-ea8f-8636cfcccd6d",
			"73d3ced0-d724-d364-20f0-197d39c5329a",
			"ed51b1ac-d686-31e5-7108-54a80f622bbd",
			"49375ed4-bf5c-0f0e-edf1-c0fabe6b7c93",
			"6ab21dd2-4140-5f56-b84a-6384a61a2d15",
			"8a7c8e96-bae4-8e37-b328-fcae629ddf02",
			"cd0872b2-c917-29fd-b36f-877b7c822ea0",
			"e933025b-0bf0-b633-64d9-5485a863c73a",
			"eb40a176-024a-a40f-4b17-2a542f6dc408",
			"86021102-4586-7ec3-a1b0-2f7973f70aea",
			"99bf3de1-d782-057d-2b5a-c5168264367a"
		],
		"timestamp": 1517008090259,
		"synced": false,
		"remote_id": 0,
		"owner": "1242759",
		"sharedWithTeam": false,
		"subscribed": false,
		"remoteLink": "",
		"remoteLinkUpdatedAt": null,
		"public": false,
		"createdAt": 1517008090259,
		"updatedAt": "2018-02-01T17:13:10.763Z",
		"write": true,
		"published": false,
		"favorite": false,
		"permissions": {},
		"syncedPermissions": {},
		"events": [],
		"variables": [],
		"auth": null
	},
	"folder": null,
	"environment": null,
	"globals": [],
	"results": [
		{
			"name": "CLEAN UP - Boats 1",
			"id": "5012d7a8-1c75-5cf3-1fb4-54fa8f04cee7",
			"totalTime": 0,
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"tests": {
				"name": "response is ok",
				"status": "pass",
				"response has json body": true
			},
			"testPassFailCounts": {
				"response is ok": {
					"pass": 22,
					"fail": 0
				},
				"response has json body": {
					"pass": 22,
					"fail": 0
				}
			},
			"times": [
				"37",
				"42",
				"44",
				"41",
				"44",
				"34",
				"31",
				"39",
				"37",
				"35",
				"42",
				"27",
				"33",
				"59",
				"29",
				"36",
				"30",
				"104",
				"38",
				"31",
				"36",
				"23"
			],
			"allTests": [
				{
					"response is ok": true,
					"response has json body": true
				},
				{
					"name": "response is ok",
					"status": "pass",
					"response has json body": true
				},
				{
					"name": "response is ok",
					"status": "pass",
					"response has json body": true
				},
				{
					"name": "response is ok",
					"status": "pass",
					"response has json body": true
				},
				{
					"name": "response is ok",
					"status": "pass",
					"response has json body": true
				},
				{
					"name": "response is ok",
					"status": "pass",
					"response has json body": true
				},
				{
					"name": "response is ok",
					"status": "pass",
					"response has json body": true
				},
				{
					"name": "response is ok",
					"status": "pass",
					"response has json body": true
				},
				{
					"name": "response is ok",
					"status": "pass",
					"response has json body": true
				},
				{
					"name": "response is ok",
					"status": "pass",
					"response has json body": true
				},
				{
					"name": "response is ok",
					"status": "pass",
					"response has json body": true
				},
				{
					"name": "response is ok",
					"status": "pass",
					"response has json body": true
				},
				{
					"name": "response is ok",
					"status": "pass",
					"response has json body": true
				},
				{
					"name": "response is ok",
					"status": "pass",
					"response has json body": true
				},
				{
					"name": "response is ok",
					"status": "pass",
					"response has json body": true
				},
				{
					"name": "response is ok",
					"status": "pass",
					"response has json body": true
				},
				{
					"name": "response is ok",
					"status": "pass",
					"response has json body": true
				},
				{
					"name": "response is ok",
					"status": "pass",
					"response has json body": true
				},
				{
					"name": "response is ok",
					"status": "pass",
					"response has json body": true
				},
				{
					"name": "response is ok",
					"status": "pass",
					"response has json body": true
				},
				{
					"name": "response is ok",
					"status": "pass",
					"response has json body": true
				},
				{
					"name": "response is ok",
					"status": "pass",
					"response has json body": true
				}
			],
			"time": "23",
			"totalRequestTime": "374244414434313937354227335929363010438313623",
			"iterationResults": {}
		},
		{
			"name": "CLEAN UP - Boats 2",
			"id": "68e02598-88d4-2d47-4311-84043dae7bf4",
			"totalTime": 0,
			"responseCode": {
				"code": 204,
				"name": "No Content",
				"detail": {
					"name": "No Content",
					"detail": "The server successfully processed the request, but is not returning any content."
				}
			},
			"tests": {
				"name": "response is 204",
				"status": "pass"
			},
			"testPassFailCounts": {
				"response is 204": {
					"pass": 17,
					"fail": 0
				}
			},
			"times": [
				"59",
				"37",
				"46",
				"52",
				"36",
				"33",
				"36",
				"34",
				"38",
				"34",
				"44",
				"36",
				"44",
				"32",
				"38",
				"38",
				"42"
			],
			"allTests": [
				{
					"response is 204": true
				},
				{
					"name": "response is 204",
					"status": "pass"
				},
				{
					"name": "response is 204",
					"status": "pass"
				},
				{
					"name": "response is 204",
					"status": "pass"
				},
				{
					"name": "response is 204",
					"status": "pass"
				},
				{
					"name": "response is 204",
					"status": "pass"
				},
				{
					"name": "response is 204",
					"status": "pass"
				},
				{
					"name": "response is 204",
					"status": "pass"
				},
				{
					"name": "response is 204",
					"status": "pass"
				},
				{
					"name": "response is 204",
					"status": "pass"
				},
				{
					"name": "response is 204",
					"status": "pass"
				},
				{
					"name": "response is 204",
					"status": "pass"
				},
				{
					"name": "response is 204",
					"status": "pass"
				},
				{
					"name": "response is 204",
					"status": "pass"
				},
				{
					"name": "response is 204",
					"status": "pass"
				},
				{
					"name": "response is 204",
					"status": "pass"
				},
				{
					"name": "response is 204",
					"status": "pass"
				}
			],
			"time": "42",
			"totalRequestTime": "5937465236333634383444364432383842",
			"iterationResults": {}
		},
		{
			"name": "CLEAN UP - Slips 1",
			"id": "c1862c74-dd0d-f163-3792-1987b035a9b2",
			"totalTime": 0,
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"tests": {
				"name": "response is ok",
				"status": "pass",
				"response has json body": true,
				"Conditional": true
			},
			"testPassFailCounts": {
				"response is ok": {
					"pass": 13,
					"fail": 0
				},
				"response has json body": {
					"pass": 13,
					"fail": 0
				},
				"Conditional": {
					"pass": 13,
					"fail": 0
				}
			},
			"times": [
				"36",
				"38",
				"31",
				"34",
				"39",
				"43",
				"28",
				"37",
				"42",
				"31",
				"46",
				"34",
				"43"
			],
			"allTests": [
				{
					"response is ok": true,
					"response has json body": true,
					"Conditional": true
				},
				{
					"name": "response is ok",
					"status": "pass",
					"response has json body": true,
					"Conditional": true
				},
				{
					"name": "response is ok",
					"status": "pass",
					"response has json body": true,
					"Conditional": true
				},
				{
					"name": "response is ok",
					"status": "pass",
					"response has json body": true,
					"Conditional": true
				},
				{
					"name": "response is ok",
					"status": "pass",
					"response has json body": true,
					"Conditional": true
				},
				{
					"name": "response is ok",
					"status": "pass",
					"response has json body": true,
					"Conditional": true
				},
				{
					"name": "response is ok",
					"status": "pass",
					"response has json body": true,
					"Conditional": true
				},
				{
					"name": "response is ok",
					"status": "pass",
					"response has json body": true,
					"Conditional": true
				},
				{
					"name": "response is ok",
					"status": "pass",
					"response has json body": true,
					"Conditional": true
				},
				{
					"name": "response is ok",
					"status": "pass",
					"response has json body": true,
					"Conditional": true
				},
				{
					"name": "response is ok",
					"status": "pass",
					"response has json body": true,
					"Conditional": true
				},
				{
					"name": "response is ok",
					"status": "pass",
					"response has json body": true,
					"Conditional": true
				},
				{
					"name": "response is ok",
					"status": "pass",
					"response has json body": true,
					"Conditional": true
				}
			],
			"time": "43",
			"totalRequestTime": "36383134394328374231463443",
			"iterationResults": {}
		},
		{
			"name": "TEST 1: GET /boats/",
			"id": "65bcc712-a13b-5098-0187-cc247689be3c",
			"totalTime": 0,
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"tests": {
				"name": "response is ok",
				"status": "pass",
				"response has body": true,
				"response has 0 objects": true
			},
			"testPassFailCounts": {
				"response is ok": {
					"pass": 5,
					"fail": 0
				},
				"response has body": {
					"pass": 5,
					"fail": 0
				},
				"response has 0 objects": {
					"pass": 5,
					"fail": 0
				}
			},
			"times": [
				"28",
				"39",
				"31",
				"29",
				"33"
			],
			"allTests": [
				{
					"response is ok": true,
					"response has body": true,
					"response has 0 objects": true
				},
				{
					"name": "response is ok",
					"status": "pass",
					"response has body": true,
					"response has 0 objects": true
				},
				{
					"name": "response is ok",
					"status": "pass",
					"response has body": true,
					"response has 0 objects": true
				},
				{
					"name": "response is ok",
					"status": "pass",
					"response has body": true,
					"response has 0 objects": true
				},
				{
					"name": "response is ok",
					"status": "pass",
					"response has body": true,
					"response has 0 objects": true
				}
			],
			"time": "33",
			"totalRequestTime": "2839312933",
			"iterationResults": {}
		},
		{
			"name": "TEST 2: POST /boats/",
			"id": "1a877e77-c279-bd6e-a25b-0b1b7b705a0a",
			"totalTime": 0,
			"responseCode": {
				"code": 201,
				"name": "Created",
				"detail": {
					"name": "Created",
					"detail": "The request has been fulfilled and resulted in a new resource being created."
				}
			},
			"tests": {
				"name": "response is 201 Created",
				"status": "pass",
				"response has body": true,
				"response matches request": true
			},
			"testPassFailCounts": {
				"response is 201 Created": {
					"pass": 5,
					"fail": 0
				},
				"response has body": {
					"pass": 5,
					"fail": 0
				},
				"response matches request": {
					"pass": 5,
					"fail": 0
				}
			},
			"times": [
				"75",
				"43",
				"50",
				"43",
				"38"
			],
			"allTests": [
				{
					"response is 201 Created": true,
					"response has body": true,
					"response matches request": true
				},
				{
					"name": "response is 201 Created",
					"status": "pass",
					"response has body": true,
					"response matches request": true
				},
				{
					"name": "response is 201 Created",
					"status": "pass",
					"response has body": true,
					"response matches request": true
				},
				{
					"name": "response is 201 Created",
					"status": "pass",
					"response has body": true,
					"response matches request": true
				},
				{
					"name": "response is 201 Created",
					"status": "pass",
					"response has body": true,
					"response matches request": true
				}
			],
			"time": "38",
			"totalRequestTime": "7543504338",
			"iterationResults": {}
		},
		{
			"name": "TEST 3: GET {{test2url}}",
			"id": "1471d4db-7124-b366-4097-66b429748415",
			"totalTime": 0,
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"tests": {
				"name": "response is ok",
				"status": "pass",
				"response has body": true,
				"response matches test2 data sent": true
			},
			"testPassFailCounts": {
				"response is ok": {
					"pass": 5,
					"fail": 0
				},
				"response has body": {
					"pass": 5,
					"fail": 0
				},
				"response matches test2 data sent": {
					"pass": 5,
					"fail": 0
				}
			},
			"times": [
				"87",
				"64",
				"68",
				"69",
				"58"
			],
			"allTests": [
				{
					"response is ok": true,
					"response has body": true,
					"response matches test2 data sent": true
				},
				{
					"name": "response is ok",
					"status": "pass",
					"response has body": true,
					"response matches test2 data sent": true
				},
				{
					"name": "response is ok",
					"status": "pass",
					"response has body": true,
					"response matches test2 data sent": true
				},
				{
					"name": "response is ok",
					"status": "pass",
					"response has body": true,
					"response matches test2 data sent": true
				},
				{
					"name": "response is ok",
					"status": "pass",
					"response has body": true,
					"response matches test2 data sent": true
				}
			],
			"time": "58",
			"totalRequestTime": "8764686958",
			"iterationResults": {}
		},
		{
			"name": "TEST 4: GET /boats/{{test2id}}",
			"id": "ffe399bf-fb96-99ba-c420-d39219e7ca27",
			"totalTime": 0,
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"tests": {
				"name": "response is ok",
				"status": "pass",
				"response has body": true,
				"response matches test2 data sent": true
			},
			"testPassFailCounts": {
				"response is ok": {
					"pass": 5,
					"fail": 0
				},
				"response has body": {
					"pass": 5,
					"fail": 0
				},
				"response matches test2 data sent": {
					"pass": 5,
					"fail": 0
				}
			},
			"times": [
				"40",
				"30",
				"32",
				"34",
				"33"
			],
			"allTests": [
				{
					"response is ok": true,
					"response has body": true,
					"response matches test2 data sent": true
				},
				{
					"name": "response is ok",
					"status": "pass",
					"response has body": true,
					"response matches test2 data sent": true
				},
				{
					"name": "response is ok",
					"status": "pass",
					"response has body": true,
					"response matches test2 data sent": true
				},
				{
					"name": "response is ok",
					"status": "pass",
					"response has body": true,
					"response matches test2 data sent": true
				},
				{
					"name": "response is ok",
					"status": "pass",
					"response has body": true,
					"response matches test2 data sent": true
				}
			],
			"time": "33",
			"totalRequestTime": "4030323433",
			"iterationResults": {}
		},
		{
			"name": "TEST 5: GET /boats/",
			"id": "638243e8-97db-47a8-588e-b16b17662f10",
			"totalTime": 0,
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"tests": {
				"name": "Test 1 was successful",
				"status": "pass",
				"response is ok": true,
				"response has body": true,
				"response has 1 element that matches test2 data": true
			},
			"testPassFailCounts": {
				"Test 1 was successful": {
					"pass": 5,
					"fail": 0
				},
				"response is ok": {
					"pass": 5,
					"fail": 0
				},
				"response has body": {
					"pass": 5,
					"fail": 0
				},
				"response has 1 element that matches test2 data": {
					"pass": 5,
					"fail": 0
				}
			},
			"times": [
				"28",
				"47",
				"31",
				"37",
				"28"
			],
			"allTests": [
				{
					"Test 1 was successful": true,
					"response is ok": true,
					"response has body": true,
					"response has 1 element that matches test2 data": true
				},
				{
					"name": "Test 1 was successful",
					"status": "pass",
					"response is ok": true,
					"response has body": true,
					"response has 1 element that matches test2 data": true
				},
				{
					"name": "Test 1 was successful",
					"status": "pass",
					"response is ok": true,
					"response has body": true,
					"response has 1 element that matches test2 data": true
				},
				{
					"name": "Test 1 was successful",
					"status": "pass",
					"response is ok": true,
					"response has body": true,
					"response has 1 element that matches test2 data": true
				},
				{
					"name": "Test 1 was successful",
					"status": "pass",
					"response is ok": true,
					"response has body": true,
					"response has 1 element that matches test2 data": true
				}
			],
			"time": "28",
			"totalRequestTime": "2847313728",
			"iterationResults": {}
		},
		{
			"name": "TEST 6: PATCH /boats/{test2id}",
			"id": "7005fe70-5f2d-54bb-f48c-5c027182e977",
			"totalTime": 0,
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"tests": {
				"name": "response is 200 ok",
				"status": "pass",
				"response has body": true,
				"response matches request": true
			},
			"testPassFailCounts": {
				"response is 200 ok": {
					"pass": 5,
					"fail": 0
				},
				"response has body": {
					"pass": 5,
					"fail": 0
				},
				"response matches request": {
					"pass": 5,
					"fail": 0
				}
			},
			"times": [
				"121",
				"61",
				"47",
				"70",
				"54"
			],
			"allTests": [
				{
					"response is 200 ok": true,
					"response has body": true,
					"response matches request": true
				},
				{
					"name": "response is 200 ok",
					"status": "pass",
					"response has body": true,
					"response matches request": true
				},
				{
					"name": "response is 200 ok",
					"status": "pass",
					"response has body": true,
					"response matches request": true
				},
				{
					"name": "response is 200 ok",
					"status": "pass",
					"response has body": true,
					"response matches request": true
				},
				{
					"name": "response is 200 ok",
					"status": "pass",
					"response has body": true,
					"response matches request": true
				}
			],
			"time": "54",
			"totalRequestTime": "12161477054",
			"iterationResults": {}
		},
		{
			"name": "TEST 7: GET /boats/{{test2id}}",
			"id": "f641ac7e-e721-9e9d-0b09-53b36e3f2c63",
			"totalTime": 0,
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"tests": {
				"name": "response is ok",
				"status": "pass",
				"response has body": true,
				"response matches test 6 data sent": true
			},
			"testPassFailCounts": {
				"response is ok": {
					"pass": 5,
					"fail": 0
				},
				"response has body": {
					"pass": 5,
					"fail": 0
				},
				"response matches test 6 data sent": {
					"pass": 5,
					"fail": 0
				}
			},
			"times": [
				"73",
				"72",
				"67",
				"79",
				"98"
			],
			"allTests": [
				{
					"response is ok": true,
					"response has body": true,
					"response matches test 6 data sent": true
				},
				{
					"name": "response is ok",
					"status": "pass",
					"response has body": true,
					"response matches test 6 data sent": true
				},
				{
					"name": "response is ok",
					"status": "pass",
					"response has body": true,
					"response matches test 6 data sent": true
				},
				{
					"name": "response is ok",
					"status": "pass",
					"response has body": true,
					"response matches test 6 data sent": true
				},
				{
					"name": "response is ok",
					"status": "pass",
					"response has body": true,
					"response matches test 6 data sent": true
				}
			],
			"time": "98",
			"totalRequestTime": "7372677998",
			"iterationResults": {}
		},
		{
			"name": "TEST 8: GET /slips/",
			"id": "1b0f49bc-3878-2160-eaa6-558dc7fae17b",
			"totalTime": 0,
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"tests": {
				"name": "response is ok",
				"status": "pass",
				"response has body": true,
				"response has 0 objects": true
			},
			"testPassFailCounts": {
				"response is ok": {
					"pass": 5,
					"fail": 0
				},
				"response has body": {
					"pass": 5,
					"fail": 0
				},
				"response has 0 objects": {
					"pass": 5,
					"fail": 0
				}
			},
			"times": [
				"28",
				"31",
				"31",
				"29",
				"30"
			],
			"allTests": [
				{
					"response is ok": true,
					"response has body": true,
					"response has 0 objects": true
				},
				{
					"name": "response is ok",
					"status": "pass",
					"response has body": true,
					"response has 0 objects": true
				},
				{
					"name": "response is ok",
					"status": "pass",
					"response has body": true,
					"response has 0 objects": true
				},
				{
					"name": "response is ok",
					"status": "pass",
					"response has body": true,
					"response has 0 objects": true
				},
				{
					"name": "response is ok",
					"status": "pass",
					"response has body": true,
					"response has 0 objects": true
				}
			],
			"time": "30",
			"totalRequestTime": "2831312930",
			"iterationResults": {}
		},
		{
			"name": "TEST 9: POST /slips/",
			"id": "0f50a39c-e3c1-6a6c-5865-e5f1e7d652c2",
			"totalTime": 0,
			"responseCode": {
				"code": 201,
				"name": "Created",
				"detail": {
					"name": "Created",
					"detail": "The request has been fulfilled and resulted in a new resource being created."
				}
			},
			"tests": {
				"name": "response is 201 Created",
				"status": "pass",
				"response has body": true,
				"response matches request": true
			},
			"testPassFailCounts": {
				"response is 201 Created": {
					"pass": 5,
					"fail": 0
				},
				"response has body": {
					"pass": 5,
					"fail": 0
				},
				"response matches request": {
					"pass": 5,
					"fail": 0
				}
			},
			"times": [
				"79",
				"42",
				"34",
				"37",
				"41"
			],
			"allTests": [
				{
					"response is 201 Created": true,
					"response has body": true,
					"response matches request": true
				},
				{
					"name": "response is 201 Created",
					"status": "pass",
					"response has body": true,
					"response matches request": true
				},
				{
					"name": "response is 201 Created",
					"status": "pass",
					"response has body": true,
					"response matches request": true
				},
				{
					"name": "response is 201 Created",
					"status": "pass",
					"response has body": true,
					"response matches request": true
				},
				{
					"name": "response is 201 Created",
					"status": "pass",
					"response has body": true,
					"response matches request": true
				}
			],
			"time": "41",
			"totalRequestTime": "7942343741",
			"iterationResults": {}
		},
		{
			"name": "TEST 10: GET {{test9url}}",
			"id": "574eac10-2771-8ca4-7d3e-99f05373451f",
			"totalTime": 0,
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"tests": {
				"name": "response is ok",
				"status": "pass",
				"response has body": true,
				"response matches test9 number": true,
				"response matches test9 boat ID": true,
				"response matches test9 boat url": true,
				"response matches test9 arrival_date": true,
				"response matches test9 departure_history": true,
				"response matches test9 url & id": true
			},
			"testPassFailCounts": {
				"response is ok": {
					"pass": 5,
					"fail": 0
				},
				"response has body": {
					"pass": 5,
					"fail": 0
				},
				"response matches test9 number": {
					"pass": 5,
					"fail": 0
				},
				"response matches test9 boat ID": {
					"pass": 5,
					"fail": 0
				},
				"response matches test9 boat url": {
					"pass": 5,
					"fail": 0
				},
				"response matches test9 arrival_date": {
					"pass": 5,
					"fail": 0
				},
				"response matches test9 departure_history": {
					"pass": 5,
					"fail": 0
				},
				"response matches test9 url & id": {
					"pass": 5,
					"fail": 0
				}
			},
			"times": [
				"94",
				"62",
				"64",
				"65",
				"59"
			],
			"allTests": [
				{
					"response is ok": true,
					"response has body": true,
					"response matches test9 number": true,
					"response matches test9 boat ID": true,
					"response matches test9 boat url": true,
					"response matches test9 arrival_date": true,
					"response matches test9 departure_history": true,
					"response matches test9 url & id": true
				},
				{
					"name": "response is ok",
					"status": "pass",
					"response has body": true,
					"response matches test9 number": true,
					"response matches test9 boat ID": true,
					"response matches test9 boat url": true,
					"response matches test9 arrival_date": true,
					"response matches test9 departure_history": true,
					"response matches test9 url & id": true
				},
				{
					"name": "response is ok",
					"status": "pass",
					"response has body": true,
					"response matches test9 number": true,
					"response matches test9 boat ID": true,
					"response matches test9 boat url": true,
					"response matches test9 arrival_date": true,
					"response matches test9 departure_history": true,
					"response matches test9 url & id": true
				},
				{
					"name": "response is ok",
					"status": "pass",
					"response has body": true,
					"response matches test9 number": true,
					"response matches test9 boat ID": true,
					"response matches test9 boat url": true,
					"response matches test9 arrival_date": true,
					"response matches test9 departure_history": true,
					"response matches test9 url & id": true
				},
				{
					"name": "response is ok",
					"status": "pass",
					"response has body": true,
					"response matches test9 number": true,
					"response matches test9 boat ID": true,
					"response matches test9 boat url": true,
					"response matches test9 arrival_date": true,
					"response matches test9 departure_history": true,
					"response matches test9 url & id": true
				}
			],
			"time": "59",
			"totalRequestTime": "9462646559",
			"iterationResults": {}
		},
		{
			"name": "TEST 11: GET /slips/{{test9id}}",
			"id": "793fcb1c-bef2-d152-0858-651602166dc0",
			"totalTime": 0,
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"tests": {
				"name": "response is ok",
				"status": "pass",
				"response has body": true,
				"response matches test9 data sent": true
			},
			"testPassFailCounts": {
				"response is ok": {
					"pass": 5,
					"fail": 0
				},
				"response has body": {
					"pass": 5,
					"fail": 0
				},
				"response matches test9 data sent": {
					"pass": 5,
					"fail": 0
				}
			},
			"times": [
				"36",
				"37",
				"29",
				"28",
				"42"
			],
			"allTests": [
				{
					"response is ok": true,
					"response has body": true,
					"response matches test9 data sent": true
				},
				{
					"name": "response is ok",
					"status": "pass",
					"response has body": true,
					"response matches test9 data sent": true
				},
				{
					"name": "response is ok",
					"status": "pass",
					"response has body": true,
					"response matches test9 data sent": true
				},
				{
					"name": "response is ok",
					"status": "pass",
					"response has body": true,
					"response matches test9 data sent": true
				},
				{
					"name": "response is ok",
					"status": "pass",
					"response has body": true,
					"response matches test9 data sent": true
				}
			],
			"time": "42",
			"totalRequestTime": "3637292842",
			"iterationResults": {}
		},
		{
			"name": "TEST 12: GET /slips/",
			"id": "85e0f58b-3a33-9597-830a-8c655e6dfda7",
			"totalTime": 0,
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"tests": {
				"name": "Test 8 was successful",
				"status": "pass",
				"response is ok": true,
				"response has body": true,
				"response has 1 element that matches test9 data": true
			},
			"testPassFailCounts": {
				"Test 8 was successful": {
					"pass": 5,
					"fail": 0
				},
				"response is ok": {
					"pass": 5,
					"fail": 0
				},
				"response has body": {
					"pass": 5,
					"fail": 0
				},
				"response has 1 element that matches test9 data": {
					"pass": 5,
					"fail": 0
				}
			},
			"times": [
				"40",
				"45",
				"34",
				"30",
				"35"
			],
			"allTests": [
				{
					"Test 8 was successful": true,
					"response is ok": true,
					"response has body": true,
					"response has 1 element that matches test9 data": true
				},
				{
					"name": "Test 8 was successful",
					"status": "pass",
					"response is ok": true,
					"response has body": true,
					"response has 1 element that matches test9 data": true
				},
				{
					"name": "Test 8 was successful",
					"status": "pass",
					"response is ok": true,
					"response has body": true,
					"response has 1 element that matches test9 data": true
				},
				{
					"name": "Test 8 was successful",
					"status": "pass",
					"response is ok": true,
					"response has body": true,
					"response has 1 element that matches test9 data": true
				},
				{
					"name": "Test 8 was successful",
					"status": "pass",
					"response is ok": true,
					"response has body": true,
					"response has 1 element that matches test9 data": true
				}
			],
			"time": "35",
			"totalRequestTime": "4045343035",
			"iterationResults": {}
		},
		{
			"name": "TEST 13: PATCH /slips/{test9id}",
			"id": "94bbb092-fadf-f277-e294-510870911203",
			"totalTime": 0,
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"tests": {
				"name": "response is 200 ok",
				"status": "pass",
				"response has body": true,
				"response matches updated values": true
			},
			"testPassFailCounts": {
				"response is 200 ok": {
					"pass": 5,
					"fail": 0
				},
				"response has body": {
					"pass": 5,
					"fail": 0
				},
				"response matches updated values": {
					"pass": 5,
					"fail": 0
				}
			},
			"times": [
				"90",
				"45",
				"44",
				"68",
				"58"
			],
			"allTests": [
				{
					"response is 200 ok": true,
					"response has body": true,
					"response matches updated values": true
				},
				{
					"name": "response is 200 ok",
					"status": "pass",
					"response has body": true,
					"response matches updated values": true
				},
				{
					"name": "response is 200 ok",
					"status": "pass",
					"response has body": true,
					"response matches updated values": true
				},
				{
					"name": "response is 200 ok",
					"status": "pass",
					"response has body": true,
					"response matches updated values": true
				},
				{
					"name": "response is 200 ok",
					"status": "pass",
					"response has body": true,
					"response matches updated values": true
				}
			],
			"time": "58",
			"totalRequestTime": "9045446858",
			"iterationResults": {}
		},
		{
			"name": "TEST 14: GET /slips/{{test9id}}",
			"id": "e1708caa-e2b3-f3fd-3889-ae31d71d1870",
			"totalTime": 0,
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"tests": {
				"name": "response is ok",
				"status": "pass",
				"response has body": true,
				"response matches test 13 data sent": true
			},
			"testPassFailCounts": {
				"response is ok": {
					"pass": 5,
					"fail": 0
				},
				"response has body": {
					"pass": 5,
					"fail": 0
				},
				"response matches test 13 data sent": {
					"pass": 5,
					"fail": 0
				}
			},
			"times": [
				"84",
				"73",
				"55",
				"63",
				"90"
			],
			"allTests": [
				{
					"response is ok": true,
					"response has body": true,
					"response matches test 13 data sent": true
				},
				{
					"name": "response is ok",
					"status": "pass",
					"response has body": true,
					"response matches test 13 data sent": true
				},
				{
					"name": "response is ok",
					"status": "pass",
					"response has body": true,
					"response matches test 13 data sent": true
				},
				{
					"name": "response is ok",
					"status": "pass",
					"response has body": true,
					"response matches test 13 data sent": true
				},
				{
					"name": "response is ok",
					"status": "pass",
					"response has body": true,
					"response matches test 13 data sent": true
				}
			],
			"time": "90",
			"totalRequestTime": "8473556390",
			"iterationResults": {}
		},
		{
			"name": "TEST 15: GET /slips/{{test9id}}",
			"id": "6c84deed-3cdd-357c-f6a5-340ddacee66e",
			"totalTime": 0,
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"tests": {
				"name": "response is ok",
				"status": "pass",
				"response has body": true,
				"response matches test9 data sent": true
			},
			"testPassFailCounts": {
				"response is ok": {
					"pass": 5,
					"fail": 0
				},
				"response has body": {
					"pass": 5,
					"fail": 0
				},
				"response matches test9 data sent": {
					"pass": 5,
					"fail": 0
				}
			},
			"times": [
				"39",
				"25",
				"25",
				"29",
				"43"
			],
			"allTests": [
				{
					"response is ok": true,
					"response has body": true,
					"response matches test9 data sent": true
				},
				{
					"name": "response is ok",
					"status": "pass",
					"response has body": true,
					"response matches test9 data sent": true
				},
				{
					"name": "response is ok",
					"status": "pass",
					"response has body": true,
					"response matches test9 data sent": true
				},
				{
					"name": "response is ok",
					"status": "pass",
					"response has body": true,
					"response matches test9 data sent": true
				},
				{
					"name": "response is ok",
					"status": "pass",
					"response has body": true,
					"response matches test9 data sent": true
				}
			],
			"time": "43",
			"totalRequestTime": "3925252943",
			"iterationResults": {}
		},
		{
			"name": "TEST 16: GET /boats/{{test2id}}",
			"id": "224efce3-4487-cdfb-0318-d3b482ce81c5",
			"totalTime": 0,
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"tests": {
				"name": "response is ok",
				"status": "pass",
				"response has body": true,
				"response matches test2/6 data sent": true
			},
			"testPassFailCounts": {
				"response is ok": {
					"pass": 5,
					"fail": 0
				},
				"response has body": {
					"pass": 5,
					"fail": 0
				},
				"response matches test2/6 data sent": {
					"pass": 5,
					"fail": 0
				}
			},
			"times": [
				"42",
				"24",
				"35",
				"27",
				"34"
			],
			"allTests": [
				{
					"response is ok": true,
					"response has body": true,
					"response matches test2/6 data sent": true
				},
				{
					"name": "response is ok",
					"status": "pass",
					"response has body": true,
					"response matches test2/6 data sent": true
				},
				{
					"name": "response is ok",
					"status": "pass",
					"response has body": true,
					"response matches test2/6 data sent": true
				},
				{
					"name": "response is ok",
					"status": "pass",
					"response has body": true,
					"response matches test2/6 data sent": true
				},
				{
					"name": "response is ok",
					"status": "pass",
					"response has body": true,
					"response matches test2/6 data sent": true
				}
			],
			"time": "34",
			"totalRequestTime": "4224352734",
			"iterationResults": {}
		},
		{
			"name": "TEST 17: PUT /boats/{{test2id}}/slips/{{test9id}}",
			"id": "b3ea3daf-5d84-2660-15dc-3012bb7a8663",
			"totalTime": 0,
			"responseCode": {
				"code": 204,
				"name": "No Content",
				"detail": {
					"name": "No Content",
					"detail": "The server successfully processed the request, but is not returning any content."
				}
			},
			"tests": {
				"name": "response is 204",
				"status": "pass"
			},
			"testPassFailCounts": {
				"response is 204": {
					"pass": 5,
					"fail": 0
				}
			},
			"times": [
				"132",
				"349",
				"91",
				"83",
				"89"
			],
			"allTests": [
				{
					"response is 204": true
				},
				{
					"name": "response is 204",
					"status": "pass"
				},
				{
					"name": "response is 204",
					"status": "pass"
				},
				{
					"name": "response is 204",
					"status": "pass"
				},
				{
					"name": "response is 204",
					"status": "pass"
				}
			],
			"time": "89",
			"totalRequestTime": "132349918389",
			"iterationResults": {}
		},
		{
			"name": "TEST 18: GET /boats/{{test2id}}",
			"id": "0c21f5c8-fb89-1010-6638-6dba93ca41a5",
			"totalTime": 0,
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"tests": {
				"name": "response is ok",
				"status": "pass",
				"response has body": true,
				"response matches test16 data sent and at_sea false": true
			},
			"testPassFailCounts": {
				"response is ok": {
					"pass": 5,
					"fail": 0
				},
				"response has body": {
					"pass": 5,
					"fail": 0
				},
				"response matches test16 data sent and at_sea false": {
					"pass": 5,
					"fail": 0
				}
			},
			"times": [
				"96",
				"78",
				"73",
				"67",
				"71"
			],
			"allTests": [
				{
					"response is ok": true,
					"response has body": true,
					"response matches test16 data sent and at_sea false": true
				},
				{
					"name": "response is ok",
					"status": "pass",
					"response has body": true,
					"response matches test16 data sent and at_sea false": true
				},
				{
					"name": "response is ok",
					"status": "pass",
					"response has body": true,
					"response matches test16 data sent and at_sea false": true
				},
				{
					"name": "response is ok",
					"status": "pass",
					"response has body": true,
					"response matches test16 data sent and at_sea false": true
				},
				{
					"name": "response is ok",
					"status": "pass",
					"response has body": true,
					"response matches test16 data sent and at_sea false": true
				}
			],
			"time": "71",
			"totalRequestTime": "9678736771",
			"iterationResults": {}
		},
		{
			"name": "TEST 19: GET /slips/{{test9id}}",
			"id": "c32c750c-91a0-0376-8aec-0d14b6b82677",
			"totalTime": 0,
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"tests": {
				"name": "response is ok",
				"status": "pass",
				"response has body": true,
				"response matches test15 data sent but new boat": true
			},
			"testPassFailCounts": {
				"response is ok": {
					"pass": 5,
					"fail": 0
				},
				"response has body": {
					"pass": 5,
					"fail": 0
				},
				"response matches test15 data sent but new boat": {
					"pass": 5,
					"fail": 0
				}
			},
			"times": [
				"85",
				"73",
				"65",
				"59",
				"76"
			],
			"allTests": [
				{
					"response is ok": true,
					"response has body": true,
					"response matches test15 data sent but new boat": true
				},
				{
					"name": "response is ok",
					"status": "pass",
					"response has body": true,
					"response matches test15 data sent but new boat": true
				},
				{
					"name": "response is ok",
					"status": "pass",
					"response has body": true,
					"response matches test15 data sent but new boat": true
				},
				{
					"name": "response is ok",
					"status": "pass",
					"response has body": true,
					"response matches test15 data sent but new boat": true
				},
				{
					"name": "response is ok",
					"status": "pass",
					"response has body": true,
					"response matches test15 data sent but new boat": true
				}
			],
			"time": "76",
			"totalRequestTime": "8573655976",
			"iterationResults": {}
		},
		{
			"name": "TEST 20: DELETE /boats/{{test2id}}/slips/{{test9id}}",
			"id": "a40f02b8-efb9-e815-a00a-864f72bfdacc",
			"totalTime": 0,
			"responseCode": {
				"code": 204,
				"name": "No Content",
				"detail": {
					"name": "No Content",
					"detail": "The server successfully processed the request, but is not returning any content."
				}
			},
			"tests": {
				"name": "response is 204",
				"status": "pass"
			},
			"testPassFailCounts": {
				"response is 204": {
					"pass": 5,
					"fail": 0
				}
			},
			"times": [
				"109",
				"88",
				"88",
				"84",
				"122"
			],
			"allTests": [
				{
					"response is 204": true
				},
				{
					"name": "response is 204",
					"status": "pass"
				},
				{
					"name": "response is 204",
					"status": "pass"
				},
				{
					"name": "response is 204",
					"status": "pass"
				},
				{
					"name": "response is 204",
					"status": "pass"
				}
			],
			"time": "122",
			"totalRequestTime": "109888884122",
			"iterationResults": {}
		},
		{
			"name": "TEST 21: GET /slips/{{test9id}}",
			"id": "5a0e64e5-0ecc-02a8-cb60-f92f7717c1f0",
			"totalTime": 0,
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"tests": {
				"name": "response is ok",
				"status": "pass",
				"response has body": true,
				"response matches test19 number": true,
				"response matches test19 boat ID": true,
				"response matches test9 boat url": true,
				"response matches test9 arrival_date": true,
				"response matches test19 departure_history": true,
				"response matches test9 url & id": true
			},
			"testPassFailCounts": {
				"response is ok": {
					"pass": 5,
					"fail": 0
				},
				"response has body": {
					"pass": 5,
					"fail": 0
				},
				"response matches test19 number": {
					"pass": 5,
					"fail": 0
				},
				"response matches test19 boat ID": {
					"pass": 5,
					"fail": 0
				},
				"response matches test9 boat url": {
					"pass": 5,
					"fail": 0
				},
				"response matches test9 arrival_date": {
					"pass": 5,
					"fail": 0
				},
				"response matches test19 departure_history": {
					"pass": 5,
					"fail": 0
				},
				"response matches test9 url & id": {
					"pass": 5,
					"fail": 0
				}
			},
			"times": [
				"106",
				"143",
				"68",
				"75",
				"83"
			],
			"allTests": [
				{
					"response is ok": true,
					"response has body": true,
					"response matches test19 number": true,
					"response matches test19 boat ID": true,
					"response matches test9 boat url": true,
					"response matches test9 arrival_date": true,
					"response matches test19 departure_history": true,
					"response matches test9 url & id": true
				},
				{
					"name": "response is ok",
					"status": "pass",
					"response has body": true,
					"response matches test19 number": true,
					"response matches test19 boat ID": true,
					"response matches test9 boat url": true,
					"response matches test9 arrival_date": true,
					"response matches test19 departure_history": true,
					"response matches test9 url & id": true
				},
				{
					"name": "response is ok",
					"status": "pass",
					"response has body": true,
					"response matches test19 number": true,
					"response matches test19 boat ID": true,
					"response matches test9 boat url": true,
					"response matches test9 arrival_date": true,
					"response matches test19 departure_history": true,
					"response matches test9 url & id": true
				},
				{
					"name": "response is ok",
					"status": "pass",
					"response has body": true,
					"response matches test19 number": true,
					"response matches test19 boat ID": true,
					"response matches test9 boat url": true,
					"response matches test9 arrival_date": true,
					"response matches test19 departure_history": true,
					"response matches test9 url & id": true
				},
				{
					"name": "response is ok",
					"status": "pass",
					"response has body": true,
					"response matches test19 number": true,
					"response matches test19 boat ID": true,
					"response matches test9 boat url": true,
					"response matches test9 arrival_date": true,
					"response matches test19 departure_history": true,
					"response matches test9 url & id": true
				}
			],
			"time": "83",
			"totalRequestTime": "106143687583",
			"iterationResults": {}
		},
		{
			"name": "TEST 22: GET /boats/{{test2id}}",
			"id": "30ed4fd5-a3af-f807-3a0b-97250108c482",
			"totalTime": 0,
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"tests": {
				"name": "response is ok",
				"status": "pass",
				"response has body": true,
				"response is at sea": true
			},
			"testPassFailCounts": {
				"response is ok": {
					"pass": 5,
					"fail": 0
				},
				"response has body": {
					"pass": 5,
					"fail": 0
				},
				"response is at sea": {
					"pass": 5,
					"fail": 0
				}
			},
			"times": [
				"87",
				"88",
				"76",
				"72",
				"76"
			],
			"allTests": [
				{
					"response is ok": true,
					"response has body": true,
					"response is at sea": true
				},
				{
					"name": "response is ok",
					"status": "pass",
					"response has body": true,
					"response is at sea": true
				},
				{
					"name": "response is ok",
					"status": "pass",
					"response has body": true,
					"response is at sea": true
				},
				{
					"name": "response is ok",
					"status": "pass",
					"response has body": true,
					"response is at sea": true
				},
				{
					"name": "response is ok",
					"status": "pass",
					"response has body": true,
					"response is at sea": true
				}
			],
			"time": "76",
			"totalRequestTime": "8788767276",
			"iterationResults": {}
		},
		{
			"name": "TEST 23: PUT /boats/{{test2id}}/slips/{{test9id}}",
			"id": "a8aaa458-4f18-d7c4-b460-9fa88cfdd5bf",
			"totalTime": 0,
			"responseCode": {
				"code": 204,
				"name": "No Content",
				"detail": {
					"name": "No Content",
					"detail": "The server successfully processed the request, but is not returning any content."
				}
			},
			"tests": {
				"name": "response is 204",
				"status": "pass"
			},
			"testPassFailCounts": {
				"response is 204": {
					"pass": 5,
					"fail": 0
				}
			},
			"times": [
				"105",
				"104",
				"101",
				"99",
				"96"
			],
			"allTests": [
				{
					"response is 204": true
				},
				{
					"name": "response is 204",
					"status": "pass"
				},
				{
					"name": "response is 204",
					"status": "pass"
				},
				{
					"name": "response is 204",
					"status": "pass"
				},
				{
					"name": "response is 204",
					"status": "pass"
				}
			],
			"time": "96",
			"totalRequestTime": "1051041019996",
			"iterationResults": {}
		},
		{
			"name": "TEST 24: GET /slips/{{test9id}}",
			"id": "e66406c4-97a4-66aa-0551-0f3a00ed19e1",
			"totalTime": 0,
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"tests": {
				"name": "response is ok",
				"status": "pass",
				"response has body": true,
				"response matches test9 data sent": true
			},
			"testPassFailCounts": {
				"response is ok": {
					"pass": 5,
					"fail": 0
				},
				"response has body": {
					"pass": 5,
					"fail": 0
				},
				"response matches test9 data sent": {
					"pass": 5,
					"fail": 0
				}
			},
			"times": [
				"91",
				"68",
				"66",
				"71",
				"96"
			],
			"allTests": [
				{
					"response is ok": true,
					"response has body": true,
					"response matches test9 data sent": true
				},
				{
					"name": "response is ok",
					"status": "pass",
					"response has body": true,
					"response matches test9 data sent": true
				},
				{
					"name": "response is ok",
					"status": "pass",
					"response has body": true,
					"response matches test9 data sent": true
				},
				{
					"name": "response is ok",
					"status": "pass",
					"response has body": true,
					"response matches test9 data sent": true
				},
				{
					"name": "response is ok",
					"status": "pass",
					"response has body": true,
					"response matches test9 data sent": true
				}
			],
			"time": "96",
			"totalRequestTime": "9168667196",
			"iterationResults": {}
		},
		{
			"name": "TEST 25: GET /boats/{{test2id}}",
			"id": "4956e253-33af-68a9-9f57-ed9522b2d7d5",
			"totalTime": 0,
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"tests": {
				"name": "response is ok",
				"status": "pass",
				"response has body": true,
				"response is not at sea": true
			},
			"testPassFailCounts": {
				"response is ok": {
					"pass": 5,
					"fail": 0
				},
				"response has body": {
					"pass": 5,
					"fail": 0
				},
				"response is not at sea": {
					"pass": 5,
					"fail": 0
				}
			},
			"times": [
				"90",
				"73",
				"64",
				"72",
				"74"
			],
			"allTests": [
				{
					"response is ok": true,
					"response has body": true,
					"response is not at sea": true
				},
				{
					"name": "response is ok",
					"status": "pass",
					"response has body": true,
					"response is not at sea": true
				},
				{
					"name": "response is ok",
					"status": "pass",
					"response has body": true,
					"response is not at sea": true
				},
				{
					"name": "response is ok",
					"status": "pass",
					"response has body": true,
					"response is not at sea": true
				},
				{
					"name": "response is ok",
					"status": "pass",
					"response has body": true,
					"response is not at sea": true
				}
			],
			"time": "74",
			"totalRequestTime": "9073647274",
			"iterationResults": {}
		},
		{
			"name": "TEST 26: DELETE /slips/{{test9id}}",
			"id": "880c6673-2af3-e350-a8de-55c3944297c1",
			"totalTime": 0,
			"responseCode": {
				"code": 204,
				"name": "No Content",
				"detail": {
					"name": "No Content",
					"detail": "The server successfully processed the request, but is not returning any content."
				}
			},
			"tests": {
				"name": "response is 204",
				"status": "pass"
			},
			"testPassFailCounts": {
				"response is 204": {
					"pass": 5,
					"fail": 0
				}
			},
			"times": [
				"101",
				"102",
				"79",
				"87",
				"92"
			],
			"allTests": [
				{
					"response is 204": true
				},
				{
					"name": "response is 204",
					"status": "pass"
				},
				{
					"name": "response is 204",
					"status": "pass"
				},
				{
					"name": "response is 204",
					"status": "pass"
				},
				{
					"name": "response is 204",
					"status": "pass"
				}
			],
			"time": "92",
			"totalRequestTime": "101102798792",
			"iterationResults": {}
		},
		{
			"name": "TEST 27: GET /slips/{{test9id}}",
			"id": "005a3f63-35a3-3f2f-d55d-822cf1df6741",
			"totalTime": 0,
			"responseCode": {
				"code": 404,
				"name": "Not Found",
				"detail": {
					"name": "Not Found",
					"detail": "The requested resource could not be found but may be available again in the future. Subsequent requests by the client are permissible."
				}
			},
			"tests": {
				"name": "response is ok",
				"status": "pass",
				"response has error": true
			},
			"testPassFailCounts": {
				"response is ok": {
					"pass": 5,
					"fail": 0
				},
				"response has error": {
					"pass": 5,
					"fail": 0
				}
			},
			"times": [
				"51",
				"34",
				"47",
				"49",
				"35"
			],
			"allTests": [
				{
					"response is ok": true,
					"response has error": true
				},
				{
					"name": "response is ok",
					"status": "pass",
					"response has error": true
				},
				{
					"name": "response is ok",
					"status": "pass",
					"response has error": true
				},
				{
					"name": "response is ok",
					"status": "pass",
					"response has error": true
				},
				{
					"name": "response is ok",
					"status": "pass",
					"response has error": true
				}
			],
			"time": "35",
			"totalRequestTime": "5134474935",
			"iterationResults": {}
		},
		{
			"name": "TEST 28: GET /boats/{{test2id}}",
			"id": "f48a5e5b-b76c-e19f-1be9-035eaaba0dd4",
			"totalTime": 0,
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"tests": {
				"name": "response is ok",
				"status": "pass",
				"response has body": true,
				"response is at sea": true
			},
			"testPassFailCounts": {
				"response is ok": {
					"pass": 5,
					"fail": 0
				},
				"response has body": {
					"pass": 5,
					"fail": 0
				},
				"response is at sea": {
					"pass": 5,
					"fail": 0
				}
			},
			"times": [
				"88",
				"82",
				"70",
				"64",
				"67"
			],
			"allTests": [
				{
					"response is ok": true,
					"response has body": true,
					"response is at sea": true
				},
				{
					"name": "response is ok",
					"status": "pass",
					"response has body": true,
					"response is at sea": true
				},
				{
					"name": "response is ok",
					"status": "pass",
					"response has body": true,
					"response is at sea": true
				},
				{
					"name": "response is ok",
					"status": "pass",
					"response has body": true,
					"response is at sea": true
				},
				{
					"name": "response is ok",
					"status": "pass",
					"response has body": true,
					"response is at sea": true
				}
			],
			"time": "67",
			"totalRequestTime": "8882706467",
			"iterationResults": {}
		},
		{
			"name": "/slips/",
			"id": "bf0738ab-78d7-1ecf-8e2c-e7fd2f9d8361",
			"totalTime": 0,
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"tests": {
				"name": "response is ok",
				"status": "pass",
				"response has body": true
			},
			"testPassFailCounts": {
				"response is ok": {
					"pass": 5,
					"fail": 0
				},
				"response has body": {
					"pass": 5,
					"fail": 0
				}
			},
			"times": [
				"29",
				"26",
				"31",
				"28",
				"29"
			],
			"allTests": [
				{
					"response is ok": true,
					"response has body": true
				},
				{
					"name": "response is ok",
					"status": "pass",
					"response has body": true
				},
				{
					"name": "response is ok",
					"status": "pass",
					"response has body": true
				},
				{
					"name": "response is ok",
					"status": "pass",
					"response has body": true
				},
				{
					"name": "response is ok",
					"status": "pass",
					"response has body": true
				}
			],
			"time": "29",
			"totalRequestTime": "2926312829",
			"iterationResults": {}
		},
		{
			"name": "/boats/",
			"id": "799c9c3d-0ba9-8dc1-0002-4ae7cb2adcc3",
			"totalTime": 0,
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"tests": {
				"name": "response is ok",
				"status": "pass",
				"response has body": true
			},
			"testPassFailCounts": {
				"response is ok": {
					"pass": 5,
					"fail": 0
				},
				"response has body": {
					"pass": 5,
					"fail": 0
				}
			},
			"times": [
				"47",
				"37",
				"29",
				"32",
				"30"
			],
			"allTests": [
				{
					"response is ok": true,
					"response has body": true
				},
				{
					"name": "response is ok",
					"status": "pass",
					"response has body": true
				},
				{
					"name": "response is ok",
					"status": "pass",
					"response has body": true
				},
				{
					"name": "response is ok",
					"status": "pass",
					"response has body": true
				},
				{
					"name": "response is ok",
					"status": "pass",
					"response has body": true
				}
			],
			"time": "30",
			"totalRequestTime": "4737293230",
			"iterationResults": {}
		},
		{
			"name": "400 - Extra Info - POST /boats/",
			"id": "48eb54ae-2f37-a672-827d-4a19fa86148a",
			"totalTime": 0,
			"responseCode": {
				"code": 400,
				"name": "Bad Request",
				"detail": {
					"name": "Bad Request",
					"detail": "The request cannot be fulfilled due to bad syntax."
				}
			},
			"tests": {
				"name": "response is 400 Created",
				"status": "pass",
				"response has error": true
			},
			"testPassFailCounts": {
				"response is 400 Created": {
					"pass": 5,
					"fail": 0
				},
				"response has error": {
					"pass": 5,
					"fail": 0
				}
			},
			"times": [
				"27",
				"20",
				"35",
				"20",
				"25"
			],
			"allTests": [
				{
					"response is 400 Created": true,
					"response has error": true
				},
				{
					"name": "response is 400 Created",
					"status": "pass",
					"response has error": true
				},
				{
					"name": "response is 400 Created",
					"status": "pass",
					"response has error": true
				},
				{
					"name": "response is 400 Created",
					"status": "pass",
					"response has error": true
				},
				{
					"name": "response is 400 Created",
					"status": "pass",
					"response has error": true
				}
			],
			"time": "25",
			"totalRequestTime": "2720352025",
			"iterationResults": {}
		},
		{
			"name": "Verify /boats/ ",
			"id": "1b39ad28-302e-1fda-9a3a-ad7e4788f21f",
			"totalTime": 0,
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"tests": {
				"name": "response is ok",
				"status": "pass",
				"response has body": true,
				"response matches pre exactly": true
			},
			"testPassFailCounts": {
				"response is ok": {
					"pass": 5,
					"fail": 0
				},
				"response has body": {
					"pass": 5,
					"fail": 0
				},
				"response matches pre exactly": {
					"pass": 5,
					"fail": 0
				}
			},
			"times": [
				"51",
				"32",
				"30",
				"34",
				"30"
			],
			"allTests": [
				{
					"response is ok": true,
					"response has body": true,
					"response matches pre exactly": true
				},
				{
					"name": "response is ok",
					"status": "pass",
					"response has body": true,
					"response matches pre exactly": true
				},
				{
					"name": "response is ok",
					"status": "pass",
					"response has body": true,
					"response matches pre exactly": true
				},
				{
					"name": "response is ok",
					"status": "pass",
					"response has body": true,
					"response matches pre exactly": true
				},
				{
					"name": "response is ok",
					"status": "pass",
					"response has body": true,
					"response matches pre exactly": true
				}
			],
			"time": "30",
			"totalRequestTime": "5132303430",
			"iterationResults": {}
		},
		{
			"name": "400 - Extra Info - POST /slips/",
			"id": "242117f3-e072-1ad9-eeb6-e6bbee009564",
			"totalTime": 0,
			"responseCode": {
				"code": 400,
				"name": "Bad Request",
				"detail": {
					"name": "Bad Request",
					"detail": "The request cannot be fulfilled due to bad syntax."
				}
			},
			"tests": {
				"name": "response is 400 Created",
				"status": "pass",
				"response has error": true
			},
			"testPassFailCounts": {
				"response is 400 Created": {
					"pass": 5,
					"fail": 0
				},
				"response has error": {
					"pass": 5,
					"fail": 0
				}
			},
			"times": [
				"23",
				"16",
				"16",
				"22",
				"18"
			],
			"allTests": [
				{
					"response is 400 Created": true,
					"response has error": true
				},
				{
					"name": "response is 400 Created",
					"status": "pass",
					"response has error": true
				},
				{
					"name": "response is 400 Created",
					"status": "pass",
					"response has error": true
				},
				{
					"name": "response is 400 Created",
					"status": "pass",
					"response has error": true
				},
				{
					"name": "response is 400 Created",
					"status": "pass",
					"response has error": true
				}
			],
			"time": "18",
			"totalRequestTime": "2316162218",
			"iterationResults": {}
		},
		{
			"name": "Verify /slips/",
			"id": "3f82d081-8600-cb8f-1c11-a60ff7953f8d",
			"totalTime": 0,
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"tests": {
				"name": "response is ok",
				"status": "pass",
				"response has body": true,
				"response matches pre exactly": true
			},
			"testPassFailCounts": {
				"response is ok": {
					"pass": 5,
					"fail": 0
				},
				"response has body": {
					"pass": 5,
					"fail": 0
				},
				"response matches pre exactly": {
					"pass": 5,
					"fail": 0
				}
			},
			"times": [
				"39",
				"28",
				"26",
				"25",
				"31"
			],
			"allTests": [
				{
					"response is ok": true,
					"response has body": true,
					"response matches pre exactly": true
				},
				{
					"name": "response is ok",
					"status": "pass",
					"response has body": true,
					"response matches pre exactly": true
				},
				{
					"name": "response is ok",
					"status": "pass",
					"response has body": true,
					"response matches pre exactly": true
				},
				{
					"name": "response is ok",
					"status": "pass",
					"response has body": true,
					"response matches pre exactly": true
				},
				{
					"name": "response is ok",
					"status": "pass",
					"response has body": true,
					"response matches pre exactly": true
				}
			],
			"time": "31",
			"totalRequestTime": "3928262531",
			"iterationResults": {}
		},
		{
			"name": "400 - Invalid Datatype - POST /boats/",
			"id": "7cb2638d-1011-5f26-2220-d55cdf64642a",
			"totalTime": 0,
			"responseCode": {
				"code": 400,
				"name": "Bad Request",
				"detail": {
					"name": "Bad Request",
					"detail": "The request cannot be fulfilled due to bad syntax."
				}
			},
			"tests": {
				"name": "response is 400 Created",
				"status": "pass",
				"response has error": true
			},
			"testPassFailCounts": {
				"response is 400 Created": {
					"pass": 5,
					"fail": 0
				},
				"response has error": {
					"pass": 5,
					"fail": 0
				}
			},
			"times": [
				"31",
				"17",
				"22",
				"27",
				"20"
			],
			"allTests": [
				{
					"response is 400 Created": true,
					"response has error": true
				},
				{
					"name": "response is 400 Created",
					"status": "pass",
					"response has error": true
				},
				{
					"name": "response is 400 Created",
					"status": "pass",
					"response has error": true
				},
				{
					"name": "response is 400 Created",
					"status": "pass",
					"response has error": true
				},
				{
					"name": "response is 400 Created",
					"status": "pass",
					"response has error": true
				}
			],
			"time": "20",
			"totalRequestTime": "3117222720",
			"iterationResults": {}
		},
		{
			"name": "Verify /boats/",
			"id": "5e3cd318-aa7c-d2bd-05a0-a6e1b308e965",
			"totalTime": 0,
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"tests": {
				"name": "response is ok",
				"status": "pass",
				"response has body": true,
				"response matches pre exactly": true
			},
			"testPassFailCounts": {
				"response is ok": {
					"pass": 5,
					"fail": 0
				},
				"response has body": {
					"pass": 5,
					"fail": 0
				},
				"response matches pre exactly": {
					"pass": 5,
					"fail": 0
				}
			},
			"times": [
				"41",
				"28",
				"30",
				"29",
				"39"
			],
			"allTests": [
				{
					"response is ok": true,
					"response has body": true,
					"response matches pre exactly": true
				},
				{
					"name": "response is ok",
					"status": "pass",
					"response has body": true,
					"response matches pre exactly": true
				},
				{
					"name": "response is ok",
					"status": "pass",
					"response has body": true,
					"response matches pre exactly": true
				},
				{
					"name": "response is ok",
					"status": "pass",
					"response has body": true,
					"response matches pre exactly": true
				},
				{
					"name": "response is ok",
					"status": "pass",
					"response has body": true,
					"response matches pre exactly": true
				}
			],
			"time": "39",
			"totalRequestTime": "4128302939",
			"iterationResults": {}
		},
		{
			"name": "400 - Invalid Data - POST /slips/",
			"id": "291f9012-9c21-2a6c-e728-6820cd8a4e43",
			"totalTime": 0,
			"responseCode": {
				"code": 400,
				"name": "Bad Request",
				"detail": {
					"name": "Bad Request",
					"detail": "The request cannot be fulfilled due to bad syntax."
				}
			},
			"tests": {
				"name": "response is 400 Created",
				"status": "pass",
				"response has error": true
			},
			"testPassFailCounts": {
				"response is 400 Created": {
					"pass": 5,
					"fail": 0
				},
				"response has error": {
					"pass": 5,
					"fail": 0
				}
			},
			"times": [
				"40",
				"27",
				"19",
				"21",
				"27"
			],
			"allTests": [
				{
					"response is 400 Created": true,
					"response has error": true
				},
				{
					"name": "response is 400 Created",
					"status": "pass",
					"response has error": true
				},
				{
					"name": "response is 400 Created",
					"status": "pass",
					"response has error": true
				},
				{
					"name": "response is 400 Created",
					"status": "pass",
					"response has error": true
				},
				{
					"name": "response is 400 Created",
					"status": "pass",
					"response has error": true
				}
			],
			"time": "27",
			"totalRequestTime": "4027192127",
			"iterationResults": {}
		},
		{
			"name": "Verify /slips/",
			"id": "6586f52e-0ca8-42be-49b8-432183f2de64",
			"totalTime": 0,
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"tests": {
				"name": "response is ok",
				"status": "pass",
				"response has body": true,
				"response matches pre exactly": true
			},
			"testPassFailCounts": {
				"response is ok": {
					"pass": 5,
					"fail": 0
				},
				"response has body": {
					"pass": 5,
					"fail": 0
				},
				"response matches pre exactly": {
					"pass": 5,
					"fail": 0
				}
			},
			"times": [
				"52",
				"35",
				"25",
				"27",
				"35"
			],
			"allTests": [
				{
					"response is ok": true,
					"response has body": true,
					"response matches pre exactly": true
				},
				{
					"name": "response is ok",
					"status": "pass",
					"response has body": true,
					"response matches pre exactly": true
				},
				{
					"name": "response is ok",
					"status": "pass",
					"response has body": true,
					"response matches pre exactly": true
				},
				{
					"name": "response is ok",
					"status": "pass",
					"response has body": true,
					"response matches pre exactly": true
				},
				{
					"name": "response is ok",
					"status": "pass",
					"response has body": true,
					"response matches pre exactly": true
				}
			],
			"time": "35",
			"totalRequestTime": "5235252735",
			"iterationResults": {}
		},
		{
			"name": "400 - Too Little 1 - POST /boats/",
			"id": "cc826b2e-8d1f-f4d4-a2f3-b22e721c4cd4",
			"totalTime": 0,
			"responseCode": {
				"code": 400,
				"name": "Bad Request",
				"detail": {
					"name": "Bad Request",
					"detail": "The request cannot be fulfilled due to bad syntax."
				}
			},
			"tests": {
				"name": "response is 400 Created",
				"status": "pass",
				"response has error": true
			},
			"testPassFailCounts": {
				"response is 400 Created": {
					"pass": 5,
					"fail": 0
				},
				"response has error": {
					"pass": 5,
					"fail": 0
				}
			},
			"times": [
				"27",
				"251",
				"16",
				"20",
				"18"
			],
			"allTests": [
				{
					"response is 400 Created": true,
					"response has error": true
				},
				{
					"name": "response is 400 Created",
					"status": "pass",
					"response has error": true
				},
				{
					"name": "response is 400 Created",
					"status": "pass",
					"response has error": true
				},
				{
					"name": "response is 400 Created",
					"status": "pass",
					"response has error": true
				},
				{
					"name": "response is 400 Created",
					"status": "pass",
					"response has error": true
				}
			],
			"time": "18",
			"totalRequestTime": "27251162018",
			"iterationResults": {}
		},
		{
			"name": "Verify /boats/",
			"id": "10e67dac-fa94-69da-8492-15366fe0a788",
			"totalTime": 0,
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"tests": {
				"name": "response is ok",
				"status": "pass",
				"response has body": true,
				"response matches pre exactly": true
			},
			"testPassFailCounts": {
				"response is ok": {
					"pass": 5,
					"fail": 0
				},
				"response has body": {
					"pass": 5,
					"fail": 0
				},
				"response matches pre exactly": {
					"pass": 5,
					"fail": 0
				}
			},
			"times": [
				"38",
				"37",
				"28",
				"33",
				"45"
			],
			"allTests": [
				{
					"response is ok": true,
					"response has body": true,
					"response matches pre exactly": true
				},
				{
					"name": "response is ok",
					"status": "pass",
					"response has body": true,
					"response matches pre exactly": true
				},
				{
					"name": "response is ok",
					"status": "pass",
					"response has body": true,
					"response matches pre exactly": true
				},
				{
					"name": "response is ok",
					"status": "pass",
					"response has body": true,
					"response matches pre exactly": true
				},
				{
					"name": "response is ok",
					"status": "pass",
					"response has body": true,
					"response matches pre exactly": true
				}
			],
			"time": "45",
			"totalRequestTime": "3837283345",
			"iterationResults": {}
		},
		{
			"name": "400 - Too Little 2 - POST /boats/",
			"id": "79eb9bdd-e846-8c59-3011-1958535b0486",
			"totalTime": 0,
			"responseCode": {
				"code": 400,
				"name": "Bad Request",
				"detail": {
					"name": "Bad Request",
					"detail": "The request cannot be fulfilled due to bad syntax."
				}
			},
			"tests": {
				"name": "response is 400 Created",
				"status": "pass",
				"response has error": true
			},
			"testPassFailCounts": {
				"response is 400 Created": {
					"pass": 5,
					"fail": 0
				},
				"response has error": {
					"pass": 5,
					"fail": 0
				}
			},
			"times": [
				"23",
				"23",
				"18",
				"22",
				"23"
			],
			"allTests": [
				{
					"response is 400 Created": true,
					"response has error": true
				},
				{
					"name": "response is 400 Created",
					"status": "pass",
					"response has error": true
				},
				{
					"name": "response is 400 Created",
					"status": "pass",
					"response has error": true
				},
				{
					"name": "response is 400 Created",
					"status": "pass",
					"response has error": true
				},
				{
					"name": "response is 400 Created",
					"status": "pass",
					"response has error": true
				}
			],
			"time": "23",
			"totalRequestTime": "2323182223",
			"iterationResults": {}
		},
		{
			"name": "Verify /boats/",
			"id": "11d95291-802a-7e84-a762-0933a852e676",
			"totalTime": 0,
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"tests": {
				"name": "response is ok",
				"status": "pass",
				"response has body": true,
				"response matches pre exactly": true
			},
			"testPassFailCounts": {
				"response is ok": {
					"pass": 5,
					"fail": 0
				},
				"response has body": {
					"pass": 5,
					"fail": 0
				},
				"response matches pre exactly": {
					"pass": 5,
					"fail": 0
				}
			},
			"times": [
				"37",
				"34",
				"31",
				"30",
				"56"
			],
			"allTests": [
				{
					"response is ok": true,
					"response has body": true,
					"response matches pre exactly": true
				},
				{
					"name": "response is ok",
					"status": "pass",
					"response has body": true,
					"response matches pre exactly": true
				},
				{
					"name": "response is ok",
					"status": "pass",
					"response has body": true,
					"response matches pre exactly": true
				},
				{
					"name": "response is ok",
					"status": "pass",
					"response has body": true,
					"response matches pre exactly": true
				},
				{
					"name": "response is ok",
					"status": "pass",
					"response has body": true,
					"response matches pre exactly": true
				}
			],
			"time": "56",
			"totalRequestTime": "3734313056",
			"iterationResults": {}
		},
		{
			"name": "400 - Too Little 3 - POST /boats/",
			"id": "2233d0fd-1dd1-cdf1-8434-4a3bdf106e62",
			"totalTime": 0,
			"responseCode": {
				"code": 400,
				"name": "Bad Request",
				"detail": {
					"name": "Bad Request",
					"detail": "The request cannot be fulfilled due to bad syntax."
				}
			},
			"tests": {
				"name": "response is 400 Created",
				"status": "pass",
				"response has error": true
			},
			"testPassFailCounts": {
				"response is 400 Created": {
					"pass": 5,
					"fail": 0
				},
				"response has error": {
					"pass": 5,
					"fail": 0
				}
			},
			"times": [
				"44",
				"17",
				"17",
				"17",
				"18"
			],
			"allTests": [
				{
					"response is 400 Created": true,
					"response has error": true
				},
				{
					"name": "response is 400 Created",
					"status": "pass",
					"response has error": true
				},
				{
					"name": "response is 400 Created",
					"status": "pass",
					"response has error": true
				},
				{
					"name": "response is 400 Created",
					"status": "pass",
					"response has error": true
				},
				{
					"name": "response is 400 Created",
					"status": "pass",
					"response has error": true
				}
			],
			"time": "18",
			"totalRequestTime": "4417171718",
			"iterationResults": {}
		},
		{
			"name": "Verify /boats/",
			"id": "b334c6dc-9a92-155b-0639-917e68a968ea",
			"totalTime": 0,
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"tests": {
				"name": "response is ok",
				"status": "pass",
				"response has body": true,
				"response matches pre exactly": true
			},
			"testPassFailCounts": {
				"response is ok": {
					"pass": 5,
					"fail": 0
				},
				"response has body": {
					"pass": 5,
					"fail": 0
				},
				"response matches pre exactly": {
					"pass": 5,
					"fail": 0
				}
			},
			"times": [
				"30",
				"31",
				"29",
				"32",
				"38"
			],
			"allTests": [
				{
					"response is ok": true,
					"response has body": true,
					"response matches pre exactly": true
				},
				{
					"name": "response is ok",
					"status": "pass",
					"response has body": true,
					"response matches pre exactly": true
				},
				{
					"name": "response is ok",
					"status": "pass",
					"response has body": true,
					"response matches pre exactly": true
				},
				{
					"name": "response is ok",
					"status": "pass",
					"response has body": true,
					"response matches pre exactly": true
				},
				{
					"name": "response is ok",
					"status": "pass",
					"response has body": true,
					"response matches pre exactly": true
				}
			],
			"time": "38",
			"totalRequestTime": "3031293238",
			"iterationResults": {}
		},
		{
			"name": "400 - Too Little - POST /slips/",
			"id": "af12af81-d7ec-99bf-53d5-29e559d7cfe7",
			"totalTime": 0,
			"responseCode": {
				"code": 400,
				"name": "Bad Request",
				"detail": {
					"name": "Bad Request",
					"detail": "The request cannot be fulfilled due to bad syntax."
				}
			},
			"tests": {
				"name": "response is 400 Created",
				"status": "pass",
				"response has error": true
			},
			"testPassFailCounts": {
				"response is 400 Created": {
					"pass": 5,
					"fail": 0
				},
				"response has error": {
					"pass": 5,
					"fail": 0
				}
			},
			"times": [
				"20",
				"19",
				"22",
				"24",
				"20"
			],
			"allTests": [
				{
					"response is 400 Created": true,
					"response has error": true
				},
				{
					"name": "response is 400 Created",
					"status": "pass",
					"response has error": true
				},
				{
					"name": "response is 400 Created",
					"status": "pass",
					"response has error": true
				},
				{
					"name": "response is 400 Created",
					"status": "pass",
					"response has error": true
				},
				{
					"name": "response is 400 Created",
					"status": "pass",
					"response has error": true
				}
			],
			"time": "20",
			"totalRequestTime": "2019222420",
			"iterationResults": {}
		},
		{
			"name": "Verify /slips/",
			"id": "9ac03fed-6b33-8e35-9eda-9ba3df3e770d",
			"totalTime": 0,
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"tests": {
				"name": "response is ok",
				"status": "pass",
				"response has body": true,
				"response matches pre exactly": true
			},
			"testPassFailCounts": {
				"response is ok": {
					"pass": 5,
					"fail": 0
				},
				"response has body": {
					"pass": 5,
					"fail": 0
				},
				"response matches pre exactly": {
					"pass": 5,
					"fail": 0
				}
			},
			"times": [
				"31",
				"24",
				"34",
				"34",
				"29"
			],
			"allTests": [
				{
					"response is ok": true,
					"response has body": true,
					"response matches pre exactly": true
				},
				{
					"name": "response is ok",
					"status": "pass",
					"response has body": true,
					"response matches pre exactly": true
				},
				{
					"name": "response is ok",
					"status": "pass",
					"response has body": true,
					"response matches pre exactly": true
				},
				{
					"name": "response is ok",
					"status": "pass",
					"response has body": true,
					"response matches pre exactly": true
				},
				{
					"name": "response is ok",
					"status": "pass",
					"response has body": true,
					"response matches pre exactly": true
				}
			],
			"time": "29",
			"totalRequestTime": "3124343429",
			"iterationResults": {}
		},
		{
			"name": "/slips/",
			"id": "3e0cabbc-97da-a5e2-9040-cea9765a7be6",
			"totalTime": 0,
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"tests": {
				"name": "response is ok",
				"status": "pass",
				"response has body": true
			},
			"testPassFailCounts": {
				"response is ok": {
					"pass": 5,
					"fail": 0
				},
				"response has body": {
					"pass": 5,
					"fail": 0
				}
			},
			"times": [
				"36",
				"26",
				"25",
				"30",
				"38"
			],
			"allTests": [
				{
					"response is ok": true,
					"response has body": true
				},
				{
					"name": "response is ok",
					"status": "pass",
					"response has body": true
				},
				{
					"name": "response is ok",
					"status": "pass",
					"response has body": true
				},
				{
					"name": "response is ok",
					"status": "pass",
					"response has body": true
				},
				{
					"name": "response is ok",
					"status": "pass",
					"response has body": true
				}
			],
			"time": "38",
			"totalRequestTime": "3626253038",
			"iterationResults": {}
		},
		{
			"name": "/boats/",
			"id": "ee606220-9492-f505-9bb7-a3a4ebf16de0",
			"totalTime": 0,
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"tests": {
				"name": "response is ok",
				"status": "pass",
				"response has body": true
			},
			"testPassFailCounts": {
				"response is ok": {
					"pass": 5,
					"fail": 0
				},
				"response has body": {
					"pass": 5,
					"fail": 0
				}
			},
			"times": [
				"33",
				"29",
				"33",
				"30",
				"47"
			],
			"allTests": [
				{
					"response is ok": true,
					"response has body": true
				},
				{
					"name": "response is ok",
					"status": "pass",
					"response has body": true
				},
				{
					"name": "response is ok",
					"status": "pass",
					"response has body": true
				},
				{
					"name": "response is ok",
					"status": "pass",
					"response has body": true
				},
				{
					"name": "response is ok",
					"status": "pass",
					"response has body": true
				}
			],
			"time": "47",
			"totalRequestTime": "3329333047",
			"iterationResults": {}
		},
		{
			"name": "404 /boats/{{fake_id}}",
			"id": "784cb22c-9f2a-b0f2-458d-593d333b1e4a",
			"totalTime": 0,
			"responseCode": {
				"code": 404,
				"name": "Not Found",
				"detail": {
					"name": "Not Found",
					"detail": "The requested resource could not be found but may be available again in the future. Subsequent requests by the client are permissible."
				}
			},
			"tests": {
				"name": "response is 404 Not Found",
				"status": "pass",
				"response has error": true
			},
			"testPassFailCounts": {
				"response is 404 Not Found": {
					"pass": 5,
					"fail": 0
				},
				"response has error": {
					"pass": 5,
					"fail": 0
				}
			},
			"times": [
				"25",
				"27",
				"22",
				"19",
				"24"
			],
			"allTests": [
				{
					"response is 404 Not Found": true,
					"response has error": true
				},
				{
					"name": "response is 404 Not Found",
					"status": "pass",
					"response has error": true
				},
				{
					"name": "response is 404 Not Found",
					"status": "pass",
					"response has error": true
				},
				{
					"name": "response is 404 Not Found",
					"status": "pass",
					"response has error": true
				},
				{
					"name": "response is 404 Not Found",
					"status": "pass",
					"response has error": true
				}
			],
			"time": "24",
			"totalRequestTime": "2527221924",
			"iterationResults": {}
		},
		{
			"name": "Verify /boats/",
			"id": "3ef77eb5-e79b-d713-8510-063f5452d4c6",
			"totalTime": 0,
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"tests": {
				"name": "response is ok",
				"status": "pass",
				"response has body": true,
				"response matches pre exactly": true
			},
			"testPassFailCounts": {
				"response is ok": {
					"pass": 5,
					"fail": 0
				},
				"response has body": {
					"pass": 5,
					"fail": 0
				},
				"response matches pre exactly": {
					"pass": 5,
					"fail": 0
				}
			},
			"times": [
				"35",
				"35",
				"34",
				"32",
				"33"
			],
			"allTests": [
				{
					"response is ok": true,
					"response has body": true,
					"response matches pre exactly": true
				},
				{
					"name": "response is ok",
					"status": "pass",
					"response has body": true,
					"response matches pre exactly": true
				},
				{
					"name": "response is ok",
					"status": "pass",
					"response has body": true,
					"response matches pre exactly": true
				},
				{
					"name": "response is ok",
					"status": "pass",
					"response has body": true,
					"response matches pre exactly": true
				},
				{
					"name": "response is ok",
					"status": "pass",
					"response has body": true,
					"response matches pre exactly": true
				}
			],
			"time": "33",
			"totalRequestTime": "3535343233",
			"iterationResults": {}
		},
		{
			"name": "404 /slips/{{fake_id}}",
			"id": "59fbe851-2e79-2eb9-59f3-5fe2570a8e7f",
			"totalTime": 0,
			"responseCode": {
				"code": 404,
				"name": "Not Found",
				"detail": {
					"name": "Not Found",
					"detail": "The requested resource could not be found but may be available again in the future. Subsequent requests by the client are permissible."
				}
			},
			"tests": {
				"name": "response is 404 Not Found",
				"status": "pass",
				"response has error": true
			},
			"testPassFailCounts": {
				"response is 404 Not Found": {
					"pass": 5,
					"fail": 0
				},
				"response has error": {
					"pass": 5,
					"fail": 0
				}
			},
			"times": [
				"24",
				"22",
				"24",
				"51",
				"26"
			],
			"allTests": [
				{
					"response is 404 Not Found": true,
					"response has error": true
				},
				{
					"name": "response is 404 Not Found",
					"status": "pass",
					"response has error": true
				},
				{
					"name": "response is 404 Not Found",
					"status": "pass",
					"response has error": true
				},
				{
					"name": "response is 404 Not Found",
					"status": "pass",
					"response has error": true
				},
				{
					"name": "response is 404 Not Found",
					"status": "pass",
					"response has error": true
				}
			],
			"time": "26",
			"totalRequestTime": "2422245126",
			"iterationResults": {}
		},
		{
			"name": "Verify /slips/",
			"id": "230a57f3-e0db-d13e-9ae7-6ed2ff4c335c",
			"totalTime": 0,
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"tests": {
				"name": "response is ok",
				"status": "pass",
				"response has body": true,
				"response matches pre exactly": true
			},
			"testPassFailCounts": {
				"response is ok": {
					"pass": 5,
					"fail": 0
				},
				"response has body": {
					"pass": 5,
					"fail": 0
				},
				"response matches pre exactly": {
					"pass": 5,
					"fail": 0
				}
			},
			"times": [
				"34",
				"29",
				"27",
				"28",
				"33"
			],
			"allTests": [
				{
					"response is ok": true,
					"response has body": true,
					"response matches pre exactly": true
				},
				{
					"name": "response is ok",
					"status": "pass",
					"response has body": true,
					"response matches pre exactly": true
				},
				{
					"name": "response is ok",
					"status": "pass",
					"response has body": true,
					"response matches pre exactly": true
				},
				{
					"name": "response is ok",
					"status": "pass",
					"response has body": true,
					"response matches pre exactly": true
				},
				{
					"name": "response is ok",
					"status": "pass",
					"response has body": true,
					"response matches pre exactly": true
				}
			],
			"time": "33",
			"totalRequestTime": "3429272833",
			"iterationResults": {}
		},
		{
			"name": "/boats/",
			"id": "7ce51c42-3d31-85e0-e5b5-59b2dcf4be53",
			"totalTime": 0,
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"tests": {
				"name": "response is ok",
				"status": "pass",
				"response has body": true
			},
			"testPassFailCounts": {
				"response is ok": {
					"pass": 5,
					"fail": 0
				},
				"response has body": {
					"pass": 5,
					"fail": 0
				}
			},
			"times": [
				"30",
				"37",
				"30",
				"34",
				"29"
			],
			"allTests": [
				{
					"response is ok": true,
					"response has body": true
				},
				{
					"name": "response is ok",
					"status": "pass",
					"response has body": true
				},
				{
					"name": "response is ok",
					"status": "pass",
					"response has body": true
				},
				{
					"name": "response is ok",
					"status": "pass",
					"response has body": true
				},
				{
					"name": "response is ok",
					"status": "pass",
					"response has body": true
				}
			],
			"time": "29",
			"totalRequestTime": "3037303429",
			"iterationResults": {}
		},
		{
			"name": "/slips/",
			"id": "dc761673-648f-bf3a-3635-49f06c7538c4",
			"totalTime": 0,
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"tests": {
				"name": "response is ok",
				"status": "pass",
				"response has body": true
			},
			"testPassFailCounts": {
				"response is ok": {
					"pass": 5,
					"fail": 0
				},
				"response has body": {
					"pass": 5,
					"fail": 0
				}
			},
			"times": [
				"39",
				"36",
				"30",
				"26",
				"27"
			],
			"allTests": [
				{
					"response is ok": true,
					"response has body": true
				},
				{
					"name": "response is ok",
					"status": "pass",
					"response has body": true
				},
				{
					"name": "response is ok",
					"status": "pass",
					"response has body": true
				},
				{
					"name": "response is ok",
					"status": "pass",
					"response has body": true
				},
				{
					"name": "response is ok",
					"status": "pass",
					"response has body": true
				}
			],
			"time": "27",
			"totalRequestTime": "3936302627",
			"iterationResults": {}
		},
		{
			"name": "404 /boats/{fake_id}",
			"id": "2b88311a-c5ff-cbbb-3d00-3a650e6521b0",
			"totalTime": 0,
			"responseCode": {
				"code": 404,
				"name": "Not Found",
				"detail": {
					"name": "Not Found",
					"detail": "The requested resource could not be found but may be available again in the future. Subsequent requests by the client are permissible."
				}
			},
			"tests": {
				"name": "response is 404 Not Found",
				"status": "pass",
				"response has error": true
			},
			"testPassFailCounts": {
				"response is 404 Not Found": {
					"pass": 5,
					"fail": 0
				},
				"response has error": {
					"pass": 5,
					"fail": 0
				}
			},
			"times": [
				"18",
				"19",
				"21",
				"21",
				"29"
			],
			"allTests": [
				{
					"response is 404 Not Found": true,
					"response has error": true
				},
				{
					"name": "response is 404 Not Found",
					"status": "pass",
					"response has error": true
				},
				{
					"name": "response is 404 Not Found",
					"status": "pass",
					"response has error": true
				},
				{
					"name": "response is 404 Not Found",
					"status": "pass",
					"response has error": true
				},
				{
					"name": "response is 404 Not Found",
					"status": "pass",
					"response has error": true
				}
			],
			"time": "29",
			"totalRequestTime": "1819212129",
			"iterationResults": {}
		},
		{
			"name": "404 /slips/{fake_id}",
			"id": "c2f7446f-6d6d-1178-b7df-94ced31f5733",
			"totalTime": 0,
			"responseCode": {
				"code": 404,
				"name": "Not Found",
				"detail": {
					"name": "Not Found",
					"detail": "The requested resource could not be found but may be available again in the future. Subsequent requests by the client are permissible."
				}
			},
			"tests": {
				"name": "response is 404 Not Found",
				"status": "pass",
				"response has error": true
			},
			"testPassFailCounts": {
				"response is 404 Not Found": {
					"pass": 5,
					"fail": 0
				},
				"response has error": {
					"pass": 5,
					"fail": 0
				}
			},
			"times": [
				"22",
				"18",
				"21",
				"19",
				"19"
			],
			"allTests": [
				{
					"response is 404 Not Found": true,
					"response has error": true
				},
				{
					"name": "response is 404 Not Found",
					"status": "pass",
					"response has error": true
				},
				{
					"name": "response is 404 Not Found",
					"status": "pass",
					"response has error": true
				},
				{
					"name": "response is 404 Not Found",
					"status": "pass",
					"response has error": true
				},
				{
					"name": "response is 404 Not Found",
					"status": "pass",
					"response has error": true
				}
			],
			"time": "19",
			"totalRequestTime": "2218211919",
			"iterationResults": {}
		},
		{
			"name": "Verify /boats/",
			"id": "fdfa7793-2127-ef7d-3028-aaae98af7856",
			"totalTime": 0,
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"tests": {
				"name": "response is ok",
				"status": "pass",
				"response has body": true,
				"response matches pre exactly": true
			},
			"testPassFailCounts": {
				"response is ok": {
					"pass": 5,
					"fail": 0
				},
				"response has body": {
					"pass": 5,
					"fail": 0
				},
				"response matches pre exactly": {
					"pass": 5,
					"fail": 0
				}
			},
			"times": [
				"35",
				"29",
				"29",
				"32",
				"32"
			],
			"allTests": [
				{
					"response is ok": true,
					"response has body": true,
					"response matches pre exactly": true
				},
				{
					"name": "response is ok",
					"status": "pass",
					"response has body": true,
					"response matches pre exactly": true
				},
				{
					"name": "response is ok",
					"status": "pass",
					"response has body": true,
					"response matches pre exactly": true
				},
				{
					"name": "response is ok",
					"status": "pass",
					"response has body": true,
					"response matches pre exactly": true
				},
				{
					"name": "response is ok",
					"status": "pass",
					"response has body": true,
					"response matches pre exactly": true
				}
			],
			"time": "32",
			"totalRequestTime": "3529293232",
			"iterationResults": {}
		},
		{
			"name": "Verify /slips/",
			"id": "d10748ff-8105-071c-abb5-30bbbec709bc",
			"totalTime": 0,
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"tests": {
				"name": "response is ok",
				"status": "pass",
				"response has body": true,
				"response matches pre exactly": true
			},
			"testPassFailCounts": {
				"response is ok": {
					"pass": 5,
					"fail": 0
				},
				"response has body": {
					"pass": 5,
					"fail": 0
				},
				"response matches pre exactly": {
					"pass": 5,
					"fail": 0
				}
			},
			"times": [
				"25",
				"30",
				"24",
				"24",
				"24"
			],
			"allTests": [
				{
					"response is ok": true,
					"response has body": true,
					"response matches pre exactly": true
				},
				{
					"name": "response is ok",
					"status": "pass",
					"response has body": true,
					"response matches pre exactly": true
				},
				{
					"name": "response is ok",
					"status": "pass",
					"response has body": true,
					"response matches pre exactly": true
				},
				{
					"name": "response is ok",
					"status": "pass",
					"response has body": true,
					"response matches pre exactly": true
				},
				{
					"name": "response is ok",
					"status": "pass",
					"response has body": true,
					"response matches pre exactly": true
				}
			],
			"time": "24",
			"totalRequestTime": "2530242424",
			"iterationResults": {}
		},
		{
			"name": "POST /boats/",
			"id": "449e63e6-d97d-5106-0587-b7ca93b4b887",
			"totalTime": 0,
			"responseCode": {
				"code": 201,
				"name": "Created",
				"detail": {
					"name": "Created",
					"detail": "The request has been fulfilled and resulted in a new resource being created."
				}
			},
			"tests": {
				"name": "response is 201 Created",
				"status": "pass",
				"response has body": true,
				"response matches request": true
			},
			"testPassFailCounts": {
				"response is 201 Created": {
					"pass": 5,
					"fail": 0
				},
				"response has body": {
					"pass": 5,
					"fail": 0
				},
				"response matches request": {
					"pass": 5,
					"fail": 0
				}
			},
			"times": [
				"39",
				"35",
				"42",
				"34",
				"43"
			],
			"allTests": [
				{
					"response is 201 Created": true,
					"response has body": true,
					"response matches request": true
				},
				{
					"name": "response is 201 Created",
					"status": "pass",
					"response has body": true,
					"response matches request": true
				},
				{
					"name": "response is 201 Created",
					"status": "pass",
					"response has body": true,
					"response matches request": true
				},
				{
					"name": "response is 201 Created",
					"status": "pass",
					"response has body": true,
					"response matches request": true
				},
				{
					"name": "response is 201 Created",
					"status": "pass",
					"response has body": true,
					"response matches request": true
				}
			],
			"time": "43",
			"totalRequestTime": "3935423443",
			"iterationResults": {}
		},
		{
			"name": "POST /slips/",
			"id": "e0020c68-d9c8-be7c-8bc3-ba665dbc3d52",
			"totalTime": 0,
			"responseCode": {
				"code": 201,
				"name": "Created",
				"detail": {
					"name": "Created",
					"detail": "The request has been fulfilled and resulted in a new resource being created."
				}
			},
			"tests": {
				"name": "response is 201 Created",
				"status": "pass",
				"response has body": true,
				"response matches request": true
			},
			"testPassFailCounts": {
				"response is 201 Created": {
					"pass": 5,
					"fail": 0
				},
				"response has body": {
					"pass": 5,
					"fail": 0
				},
				"response matches request": {
					"pass": 5,
					"fail": 0
				}
			},
			"times": [
				"36",
				"35",
				"42",
				"35",
				"35"
			],
			"allTests": [
				{
					"response is 201 Created": true,
					"response has body": true,
					"response matches request": true
				},
				{
					"name": "response is 201 Created",
					"status": "pass",
					"response has body": true,
					"response matches request": true
				},
				{
					"name": "response is 201 Created",
					"status": "pass",
					"response has body": true,
					"response matches request": true
				},
				{
					"name": "response is 201 Created",
					"status": "pass",
					"response has body": true,
					"response matches request": true
				},
				{
					"name": "response is 201 Created",
					"status": "pass",
					"response has body": true,
					"response matches request": true
				}
			],
			"time": "35",
			"totalRequestTime": "3635423535",
			"iterationResults": {}
		},
		{
			"name": "/slips/",
			"id": "63207568-8aa6-a081-88a5-7a8b4b2c5fb3",
			"totalTime": 0,
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"tests": {
				"name": "response is ok",
				"status": "pass",
				"response has body": true
			},
			"testPassFailCounts": {
				"response is ok": {
					"pass": 5,
					"fail": 0
				},
				"response has body": {
					"pass": 5,
					"fail": 0
				}
			},
			"times": [
				"34",
				"35",
				"37",
				"39",
				"43"
			],
			"allTests": [
				{
					"response is ok": true,
					"response has body": true
				},
				{
					"name": "response is ok",
					"status": "pass",
					"response has body": true
				},
				{
					"name": "response is ok",
					"status": "pass",
					"response has body": true
				},
				{
					"name": "response is ok",
					"status": "pass",
					"response has body": true
				},
				{
					"name": "response is ok",
					"status": "pass",
					"response has body": true
				}
			],
			"time": "43",
			"totalRequestTime": "3435373943",
			"iterationResults": {}
		},
		{
			"name": "/boats/",
			"id": "556b949b-2ec2-73a0-c879-aeb34646fad2",
			"totalTime": 0,
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"tests": {
				"name": "response is ok",
				"status": "pass",
				"response has body": true
			},
			"testPassFailCounts": {
				"response is ok": {
					"pass": 5,
					"fail": 0
				},
				"response has body": {
					"pass": 5,
					"fail": 0
				}
			},
			"times": [
				"35",
				"31",
				"32",
				"33",
				"35"
			],
			"allTests": [
				{
					"response is ok": true,
					"response has body": true
				},
				{
					"name": "response is ok",
					"status": "pass",
					"response has body": true
				},
				{
					"name": "response is ok",
					"status": "pass",
					"response has body": true
				},
				{
					"name": "response is ok",
					"status": "pass",
					"response has body": true
				},
				{
					"name": "response is ok",
					"status": "pass",
					"response has body": true
				}
			],
			"time": "35",
			"totalRequestTime": "3531323335",
			"iterationResults": {}
		},
		{
			"name": "400 EXTRA INFO  /boats/{boat_id}",
			"id": "44cc6da5-e4c6-6a9a-963c-a6ae835dadfe",
			"totalTime": 0,
			"responseCode": {
				"code": 400,
				"name": "Bad Request",
				"detail": {
					"name": "Bad Request",
					"detail": "The request cannot be fulfilled due to bad syntax."
				}
			},
			"tests": {
				"name": "response is 404 Not Found",
				"status": "pass",
				"response has error": true
			},
			"testPassFailCounts": {
				"response is 404 Not Found": {
					"pass": 5,
					"fail": 0
				},
				"response has error": {
					"pass": 5,
					"fail": 0
				}
			},
			"times": [
				"56",
				"55",
				"49",
				"55",
				"74"
			],
			"allTests": [
				{
					"response is 404 Not Found": true,
					"response has error": true
				},
				{
					"name": "response is 404 Not Found",
					"status": "pass",
					"response has error": true
				},
				{
					"name": "response is 404 Not Found",
					"status": "pass",
					"response has error": true
				},
				{
					"name": "response is 404 Not Found",
					"status": "pass",
					"response has error": true
				},
				{
					"name": "response is 404 Not Found",
					"status": "pass",
					"response has error": true
				}
			],
			"time": "74",
			"totalRequestTime": "5655495574",
			"iterationResults": {}
		},
		{
			"name": "400 EXTRA INFO  /slips/{slip_id}",
			"id": "0cdc704a-51c0-c7dc-fa37-af168b756d8d",
			"totalTime": 0,
			"responseCode": {
				"code": 400,
				"name": "Bad Request",
				"detail": {
					"name": "Bad Request",
					"detail": "The request cannot be fulfilled due to bad syntax."
				}
			},
			"tests": {
				"name": "response is 404 Not Found",
				"status": "pass",
				"response has error": true
			},
			"testPassFailCounts": {
				"response is 404 Not Found": {
					"pass": 5,
					"fail": 0
				},
				"response has error": {
					"pass": 5,
					"fail": 0
				}
			},
			"times": [
				"140",
				"60",
				"63",
				"57",
				"59"
			],
			"allTests": [
				{
					"response is 404 Not Found": true,
					"response has error": true
				},
				{
					"name": "response is 404 Not Found",
					"status": "pass",
					"response has error": true
				},
				{
					"name": "response is 404 Not Found",
					"status": "pass",
					"response has error": true
				},
				{
					"name": "response is 404 Not Found",
					"status": "pass",
					"response has error": true
				},
				{
					"name": "response is 404 Not Found",
					"status": "pass",
					"response has error": true
				}
			],
			"time": "59",
			"totalRequestTime": "14060635759",
			"iterationResults": {}
		},
		{
			"name": "400 - Invalid Data - PATCH /boats/{{boat_id}}",
			"id": "2f2d0eec-fec0-919c-463e-9ba77b558ee2",
			"totalTime": 0,
			"responseCode": {
				"code": 400,
				"name": "Bad Request",
				"detail": {
					"name": "Bad Request",
					"detail": "The request cannot be fulfilled due to bad syntax."
				}
			},
			"tests": {
				"name": "response is 400 Created",
				"status": "pass",
				"response has error": true
			},
			"testPassFailCounts": {
				"response is 400 Created": {
					"pass": 5,
					"fail": 0
				},
				"response has error": {
					"pass": 5,
					"fail": 0
				}
			},
			"times": [
				"32",
				"34",
				"24",
				"28",
				"39"
			],
			"allTests": [
				{
					"response is 400 Created": true,
					"response has error": true
				},
				{
					"name": "response is 400 Created",
					"status": "pass",
					"response has error": true
				},
				{
					"name": "response is 400 Created",
					"status": "pass",
					"response has error": true
				},
				{
					"name": "response is 400 Created",
					"status": "pass",
					"response has error": true
				},
				{
					"name": "response is 400 Created",
					"status": "pass",
					"response has error": true
				}
			],
			"time": "39",
			"totalRequestTime": "3234242839",
			"iterationResults": {}
		},
		{
			"name": "400 - Invalid Data - PATCH /slips/{{slip_id}}",
			"id": "b54001cb-492d-1a3d-51b9-ca7d7f110d33",
			"totalTime": 0,
			"responseCode": {
				"code": 400,
				"name": "Bad Request",
				"detail": {
					"name": "Bad Request",
					"detail": "The request cannot be fulfilled due to bad syntax."
				}
			},
			"tests": {
				"name": "response is 400 Created",
				"status": "pass",
				"response has error": true
			},
			"testPassFailCounts": {
				"response is 400 Created": {
					"pass": 5,
					"fail": 0
				},
				"response has error": {
					"pass": 5,
					"fail": 0
				}
			},
			"times": [
				"26",
				"31",
				"40",
				"29",
				"34"
			],
			"allTests": [
				{
					"response is 400 Created": true,
					"response has error": true
				},
				{
					"name": "response is 400 Created",
					"status": "pass",
					"response has error": true
				},
				{
					"name": "response is 400 Created",
					"status": "pass",
					"response has error": true
				},
				{
					"name": "response is 400 Created",
					"status": "pass",
					"response has error": true
				},
				{
					"name": "response is 400 Created",
					"status": "pass",
					"response has error": true
				}
			],
			"time": "34",
			"totalRequestTime": "2631402934",
			"iterationResults": {}
		},
		{
			"name": "Verify /boats/",
			"id": "eabd2c64-09b8-bccf-96f9-edc2293969d2",
			"totalTime": 0,
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"tests": {
				"name": "response is ok",
				"status": "pass",
				"response has body": true,
				"response matches pre exactly": true
			},
			"testPassFailCounts": {
				"response is ok": {
					"pass": 5,
					"fail": 0
				},
				"response has body": {
					"pass": 5,
					"fail": 0
				},
				"response matches pre exactly": {
					"pass": 5,
					"fail": 0
				}
			},
			"times": [
				"33",
				"32",
				"33",
				"34",
				"47"
			],
			"allTests": [
				{
					"response is ok": true,
					"response has body": true,
					"response matches pre exactly": true
				},
				{
					"name": "response is ok",
					"status": "pass",
					"response has body": true,
					"response matches pre exactly": true
				},
				{
					"name": "response is ok",
					"status": "pass",
					"response has body": true,
					"response matches pre exactly": true
				},
				{
					"name": "response is ok",
					"status": "pass",
					"response has body": true,
					"response matches pre exactly": true
				},
				{
					"name": "response is ok",
					"status": "pass",
					"response has body": true,
					"response matches pre exactly": true
				}
			],
			"time": "47",
			"totalRequestTime": "3332333447",
			"iterationResults": {}
		},
		{
			"name": "Verify /slips/",
			"id": "3310d785-245f-011e-6040-bef0b42694f8",
			"totalTime": 0,
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"tests": {
				"name": "response is ok",
				"status": "pass",
				"response has body": true,
				"response matches pre exactly": true
			},
			"testPassFailCounts": {
				"response is ok": {
					"pass": 5,
					"fail": 0
				},
				"response has body": {
					"pass": 5,
					"fail": 0
				},
				"response matches pre exactly": {
					"pass": 5,
					"fail": 0
				}
			},
			"times": [
				"38",
				"27",
				"35",
				"32",
				"33"
			],
			"allTests": [
				{
					"response is ok": true,
					"response has body": true,
					"response matches pre exactly": true
				},
				{
					"name": "response is ok",
					"status": "pass",
					"response has body": true,
					"response matches pre exactly": true
				},
				{
					"name": "response is ok",
					"status": "pass",
					"response has body": true,
					"response matches pre exactly": true
				},
				{
					"name": "response is ok",
					"status": "pass",
					"response has body": true,
					"response matches pre exactly": true
				},
				{
					"name": "response is ok",
					"status": "pass",
					"response has body": true,
					"response matches pre exactly": true
				}
			],
			"time": "33",
			"totalRequestTime": "3827353233",
			"iterationResults": {}
		},
		{
			"name": "CLEAN UP - Slips 2",
			"id": "92b72bbf-53ec-91c8-7956-feffedf85c55",
			"totalTime": 0,
			"responseCode": {
				"code": 204,
				"name": "No Content",
				"detail": {
					"name": "No Content",
					"detail": "The server successfully processed the request, but is not returning any content."
				}
			},
			"tests": {
				"name": "response is 204",
				"status": "pass"
			},
			"testPassFailCounts": {
				"response is 204": {
					"pass": 8,
					"fail": 0
				}
			},
			"times": [
				"44",
				"42",
				"42",
				"37",
				"40",
				"44",
				"53",
				"40"
			],
			"allTests": [
				{
					"response is 204": true
				},
				{
					"name": "response is 204",
					"status": "pass"
				},
				{
					"name": "response is 204",
					"status": "pass"
				},
				{
					"name": "response is 204",
					"status": "pass"
				},
				{
					"name": "response is 204",
					"status": "pass"
				},
				{
					"name": "response is 204",
					"status": "pass"
				},
				{
					"name": "response is 204",
					"status": "pass"
				},
				{
					"name": "response is 204",
					"status": "pass"
				}
			],
			"time": "40",
			"totalRequestTime": "4442423740445340",
			"iterationResults": {}
		}
	],
	"totalPass": 1023,
	"totalFail": 0,
	"totalTime": 18034,
	"lifecycle": "done",
	"requests": [
		{
			"name": "CLEAN UP - Boats 1",
			"id": "5012d7a8-1c75-5cf3-1fb4-54fa8f04cee7",
			"url": "localhost:8080/boats/",
			"time": "23",
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"testPassFailCounts": {
				"response is ok": {
					"pass": 22,
					"fail": 0
				},
				"response has json body": {
					"pass": 22,
					"fail": 0
				}
			}
		},
		{
			"name": "CLEAN UP - Boats 2",
			"id": "68e02598-88d4-2d47-4311-84043dae7bf4",
			"url": "http://localhost:8080/boats/aghkZXZ-Tm9uZXIRCxIEQm9hdBiAgICAgJCECgw",
			"time": "42",
			"responseCode": {
				"code": 204,
				"name": "No Content",
				"detail": {
					"name": "No Content",
					"detail": "The server successfully processed the request, but is not returning any content."
				}
			},
			"testPassFailCounts": {
				"response is 204": {
					"pass": 17,
					"fail": 0
				}
			}
		},
		{
			"name": "CLEAN UP - Slips 1",
			"id": "c1862c74-dd0d-f163-3792-1987b035a9b2",
			"url": "localhost:8080/slips/",
			"time": "43",
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"testPassFailCounts": {
				"response is ok": {
					"pass": 13,
					"fail": 0
				},
				"response has json body": {
					"pass": 13,
					"fail": 0
				},
				"Conditional": {
					"pass": 13,
					"fail": 0
				}
			}
		},
		{
			"name": "TEST 1: GET /boats/",
			"id": "65bcc712-a13b-5098-0187-cc247689be3c",
			"url": "localhost:8080/boats/",
			"time": "33",
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"testPassFailCounts": {
				"response is ok": {
					"pass": 5,
					"fail": 0
				},
				"response has body": {
					"pass": 5,
					"fail": 0
				},
				"response has 0 objects": {
					"pass": 5,
					"fail": 0
				}
			}
		},
		{
			"name": "TEST 2: POST /boats/",
			"id": "1a877e77-c279-bd6e-a25b-0b1b7b705a0a",
			"url": "localhost:8080/boats",
			"time": "38",
			"responseCode": {
				"code": 201,
				"name": "Created",
				"detail": {
					"name": "Created",
					"detail": "The request has been fulfilled and resulted in a new resource being created."
				}
			},
			"testPassFailCounts": {
				"response is 201 Created": {
					"pass": 5,
					"fail": 0
				},
				"response has body": {
					"pass": 5,
					"fail": 0
				},
				"response matches request": {
					"pass": 5,
					"fail": 0
				}
			}
		},
		{
			"name": "TEST 3: GET {{test2url}}",
			"id": "1471d4db-7124-b366-4097-66b429748415",
			"url": "http://localhost:8080/boats/aghkZXZ-Tm9uZXIRCxIEQm9hdBiAgICAgJCECww",
			"time": "58",
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"testPassFailCounts": {
				"response is ok": {
					"pass": 5,
					"fail": 0
				},
				"response has body": {
					"pass": 5,
					"fail": 0
				},
				"response matches test2 data sent": {
					"pass": 5,
					"fail": 0
				}
			}
		},
		{
			"name": "TEST 4: GET /boats/{{test2id}}",
			"id": "ffe399bf-fb96-99ba-c420-d39219e7ca27",
			"url": "localhost:8080/boats/aghkZXZ-Tm9uZXIRCxIEQm9hdBiAgICAgJCECww",
			"time": "33",
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"testPassFailCounts": {
				"response is ok": {
					"pass": 5,
					"fail": 0
				},
				"response has body": {
					"pass": 5,
					"fail": 0
				},
				"response matches test2 data sent": {
					"pass": 5,
					"fail": 0
				}
			}
		},
		{
			"name": "TEST 5: GET /boats/",
			"id": "638243e8-97db-47a8-588e-b16b17662f10",
			"url": "localhost:8080/boats/",
			"time": "28",
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"testPassFailCounts": {
				"Test 1 was successful": {
					"pass": 5,
					"fail": 0
				},
				"response is ok": {
					"pass": 5,
					"fail": 0
				},
				"response has body": {
					"pass": 5,
					"fail": 0
				},
				"response has 1 element that matches test2 data": {
					"pass": 5,
					"fail": 0
				}
			}
		},
		{
			"name": "TEST 6: PATCH /boats/{test2id}",
			"id": "7005fe70-5f2d-54bb-f48c-5c027182e977",
			"url": "localhost:8080/boats/aghkZXZ-Tm9uZXIRCxIEQm9hdBiAgICAgJCECww",
			"time": "54",
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"testPassFailCounts": {
				"response is 200 ok": {
					"pass": 5,
					"fail": 0
				},
				"response has body": {
					"pass": 5,
					"fail": 0
				},
				"response matches request": {
					"pass": 5,
					"fail": 0
				}
			}
		},
		{
			"name": "TEST 7: GET /boats/{{test2id}}",
			"id": "f641ac7e-e721-9e9d-0b09-53b36e3f2c63",
			"url": "localhost:8080/boats/aghkZXZ-Tm9uZXIRCxIEQm9hdBiAgICAgJCECww",
			"time": "98",
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"testPassFailCounts": {
				"response is ok": {
					"pass": 5,
					"fail": 0
				},
				"response has body": {
					"pass": 5,
					"fail": 0
				},
				"response matches test 6 data sent": {
					"pass": 5,
					"fail": 0
				}
			}
		},
		{
			"name": "TEST 8: GET /slips/",
			"id": "1b0f49bc-3878-2160-eaa6-558dc7fae17b",
			"url": "localhost:8080/slips/",
			"time": "30",
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"testPassFailCounts": {
				"response is ok": {
					"pass": 5,
					"fail": 0
				},
				"response has body": {
					"pass": 5,
					"fail": 0
				},
				"response has 0 objects": {
					"pass": 5,
					"fail": 0
				}
			}
		},
		{
			"name": "TEST 9: POST /slips/",
			"id": "0f50a39c-e3c1-6a6c-5865-e5f1e7d652c2",
			"url": "localhost:8080/slips/",
			"time": "41",
			"responseCode": {
				"code": 201,
				"name": "Created",
				"detail": {
					"name": "Created",
					"detail": "The request has been fulfilled and resulted in a new resource being created."
				}
			},
			"testPassFailCounts": {
				"response is 201 Created": {
					"pass": 5,
					"fail": 0
				},
				"response has body": {
					"pass": 5,
					"fail": 0
				},
				"response matches request": {
					"pass": 5,
					"fail": 0
				}
			}
		},
		{
			"name": "TEST 10: GET {{test9url}}",
			"id": "574eac10-2771-8ca4-7d3e-99f05373451f",
			"url": "http://localhost:8080/slips/aghkZXZ-Tm9uZXIRCxIEU2xpcBiAgICAgJDECAw",
			"time": "59",
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"testPassFailCounts": {
				"response is ok": {
					"pass": 5,
					"fail": 0
				},
				"response has body": {
					"pass": 5,
					"fail": 0
				},
				"response matches test9 number": {
					"pass": 5,
					"fail": 0
				},
				"response matches test9 boat ID": {
					"pass": 5,
					"fail": 0
				},
				"response matches test9 boat url": {
					"pass": 5,
					"fail": 0
				},
				"response matches test9 arrival_date": {
					"pass": 5,
					"fail": 0
				},
				"response matches test9 departure_history": {
					"pass": 5,
					"fail": 0
				},
				"response matches test9 url & id": {
					"pass": 5,
					"fail": 0
				}
			}
		},
		{
			"name": "TEST 11: GET /slips/{{test9id}}",
			"id": "793fcb1c-bef2-d152-0858-651602166dc0",
			"url": "localhost:8080/slips/aghkZXZ-Tm9uZXIRCxIEU2xpcBiAgICAgJDECAw",
			"time": "42",
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"testPassFailCounts": {
				"response is ok": {
					"pass": 5,
					"fail": 0
				},
				"response has body": {
					"pass": 5,
					"fail": 0
				},
				"response matches test9 data sent": {
					"pass": 5,
					"fail": 0
				}
			}
		},
		{
			"name": "TEST 12: GET /slips/",
			"id": "85e0f58b-3a33-9597-830a-8c655e6dfda7",
			"url": "localhost:8080/slips/",
			"time": "35",
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"testPassFailCounts": {
				"Test 8 was successful": {
					"pass": 5,
					"fail": 0
				},
				"response is ok": {
					"pass": 5,
					"fail": 0
				},
				"response has body": {
					"pass": 5,
					"fail": 0
				},
				"response has 1 element that matches test9 data": {
					"pass": 5,
					"fail": 0
				}
			}
		},
		{
			"name": "TEST 13: PATCH /slips/{test9id}",
			"id": "94bbb092-fadf-f277-e294-510870911203",
			"url": "localhost:8080/slips/aghkZXZ-Tm9uZXIRCxIEU2xpcBiAgICAgJDECAw",
			"time": "58",
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"testPassFailCounts": {
				"response is 200 ok": {
					"pass": 5,
					"fail": 0
				},
				"response has body": {
					"pass": 5,
					"fail": 0
				},
				"response matches updated values": {
					"pass": 5,
					"fail": 0
				}
			}
		},
		{
			"name": "TEST 14: GET /slips/{{test9id}}",
			"id": "e1708caa-e2b3-f3fd-3889-ae31d71d1870",
			"url": "localhost:8080/slips/aghkZXZ-Tm9uZXIRCxIEU2xpcBiAgICAgJDECAw",
			"time": "90",
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"testPassFailCounts": {
				"response is ok": {
					"pass": 5,
					"fail": 0
				},
				"response has body": {
					"pass": 5,
					"fail": 0
				},
				"response matches test 13 data sent": {
					"pass": 5,
					"fail": 0
				}
			}
		},
		{
			"name": "TEST 15: GET /slips/{{test9id}}",
			"id": "6c84deed-3cdd-357c-f6a5-340ddacee66e",
			"url": "localhost:8080/slips/aghkZXZ-Tm9uZXIRCxIEU2xpcBiAgICAgJDECAw",
			"time": "43",
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"testPassFailCounts": {
				"response is ok": {
					"pass": 5,
					"fail": 0
				},
				"response has body": {
					"pass": 5,
					"fail": 0
				},
				"response matches test9 data sent": {
					"pass": 5,
					"fail": 0
				}
			}
		},
		{
			"name": "TEST 16: GET /boats/{{test2id}}",
			"id": "224efce3-4487-cdfb-0318-d3b482ce81c5",
			"url": "localhost:8080/boats/aghkZXZ-Tm9uZXIRCxIEQm9hdBiAgICAgJCECww",
			"time": "34",
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"testPassFailCounts": {
				"response is ok": {
					"pass": 5,
					"fail": 0
				},
				"response has body": {
					"pass": 5,
					"fail": 0
				},
				"response matches test2/6 data sent": {
					"pass": 5,
					"fail": 0
				}
			}
		},
		{
			"name": "TEST 17: PUT /boats/{{test2id}}/slips/{{test9id}}",
			"id": "b3ea3daf-5d84-2660-15dc-3012bb7a8663",
			"url": "localhost:8080/boats/aghkZXZ-Tm9uZXIRCxIEQm9hdBiAgICAgJCECww/slips/aghkZXZ-Tm9uZXIRCxIEU2xpcBiAgICAgJDECAw",
			"time": "89",
			"responseCode": {
				"code": 204,
				"name": "No Content",
				"detail": {
					"name": "No Content",
					"detail": "The server successfully processed the request, but is not returning any content."
				}
			},
			"testPassFailCounts": {
				"response is 204": {
					"pass": 5,
					"fail": 0
				}
			}
		},
		{
			"name": "TEST 18: GET /boats/{{test2id}}",
			"id": "0c21f5c8-fb89-1010-6638-6dba93ca41a5",
			"url": "localhost:8080/boats/aghkZXZ-Tm9uZXIRCxIEQm9hdBiAgICAgJCECww",
			"time": "71",
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"testPassFailCounts": {
				"response is ok": {
					"pass": 5,
					"fail": 0
				},
				"response has body": {
					"pass": 5,
					"fail": 0
				},
				"response matches test16 data sent and at_sea false": {
					"pass": 5,
					"fail": 0
				}
			}
		},
		{
			"name": "TEST 19: GET /slips/{{test9id}}",
			"id": "c32c750c-91a0-0376-8aec-0d14b6b82677",
			"url": "localhost:8080/slips/aghkZXZ-Tm9uZXIRCxIEU2xpcBiAgICAgJDECAw",
			"time": "76",
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"testPassFailCounts": {
				"response is ok": {
					"pass": 5,
					"fail": 0
				},
				"response has body": {
					"pass": 5,
					"fail": 0
				},
				"response matches test15 data sent but new boat": {
					"pass": 5,
					"fail": 0
				}
			}
		},
		{
			"name": "TEST 20: DELETE /boats/{{test2id}}/slips/{{test9id}}",
			"id": "a40f02b8-efb9-e815-a00a-864f72bfdacc",
			"url": "localhost:8080/boats/aghkZXZ-Tm9uZXIRCxIEQm9hdBiAgICAgJCECww/slips/aghkZXZ-Tm9uZXIRCxIEU2xpcBiAgICAgJDECAw?departure=2/5/2016",
			"time": "122",
			"responseCode": {
				"code": 204,
				"name": "No Content",
				"detail": {
					"name": "No Content",
					"detail": "The server successfully processed the request, but is not returning any content."
				}
			},
			"testPassFailCounts": {
				"response is 204": {
					"pass": 5,
					"fail": 0
				}
			}
		},
		{
			"name": "TEST 21: GET /slips/{{test9id}}",
			"id": "5a0e64e5-0ecc-02a8-cb60-f92f7717c1f0",
			"url": "localhost:8080/slips/aghkZXZ-Tm9uZXIRCxIEU2xpcBiAgICAgJDECAw",
			"time": "83",
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"testPassFailCounts": {
				"response is ok": {
					"pass": 5,
					"fail": 0
				},
				"response has body": {
					"pass": 5,
					"fail": 0
				},
				"response matches test19 number": {
					"pass": 5,
					"fail": 0
				},
				"response matches test19 boat ID": {
					"pass": 5,
					"fail": 0
				},
				"response matches test9 boat url": {
					"pass": 5,
					"fail": 0
				},
				"response matches test9 arrival_date": {
					"pass": 5,
					"fail": 0
				},
				"response matches test19 departure_history": {
					"pass": 5,
					"fail": 0
				},
				"response matches test9 url & id": {
					"pass": 5,
					"fail": 0
				}
			}
		},
		{
			"name": "TEST 22: GET /boats/{{test2id}}",
			"id": "30ed4fd5-a3af-f807-3a0b-97250108c482",
			"url": "localhost:8080/boats/aghkZXZ-Tm9uZXIRCxIEQm9hdBiAgICAgJCECww",
			"time": "76",
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"testPassFailCounts": {
				"response is ok": {
					"pass": 5,
					"fail": 0
				},
				"response has body": {
					"pass": 5,
					"fail": 0
				},
				"response is at sea": {
					"pass": 5,
					"fail": 0
				}
			}
		},
		{
			"name": "TEST 23: PUT /boats/{{test2id}}/slips/{{test9id}}",
			"id": "a8aaa458-4f18-d7c4-b460-9fa88cfdd5bf",
			"url": "localhost:8080/boats/aghkZXZ-Tm9uZXIRCxIEQm9hdBiAgICAgJCECww/slips/aghkZXZ-Tm9uZXIRCxIEU2xpcBiAgICAgJDECAw",
			"time": "96",
			"responseCode": {
				"code": 204,
				"name": "No Content",
				"detail": {
					"name": "No Content",
					"detail": "The server successfully processed the request, but is not returning any content."
				}
			},
			"testPassFailCounts": {
				"response is 204": {
					"pass": 5,
					"fail": 0
				}
			}
		},
		{
			"name": "TEST 24: GET /slips/{{test9id}}",
			"id": "e66406c4-97a4-66aa-0551-0f3a00ed19e1",
			"url": "localhost:8080/slips/aghkZXZ-Tm9uZXIRCxIEU2xpcBiAgICAgJDECAw",
			"time": "96",
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"testPassFailCounts": {
				"response is ok": {
					"pass": 5,
					"fail": 0
				},
				"response has body": {
					"pass": 5,
					"fail": 0
				},
				"response matches test9 data sent": {
					"pass": 5,
					"fail": 0
				}
			}
		},
		{
			"name": "TEST 25: GET /boats/{{test2id}}",
			"id": "4956e253-33af-68a9-9f57-ed9522b2d7d5",
			"url": "localhost:8080/boats/aghkZXZ-Tm9uZXIRCxIEQm9hdBiAgICAgJCECww",
			"time": "74",
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"testPassFailCounts": {
				"response is ok": {
					"pass": 5,
					"fail": 0
				},
				"response has body": {
					"pass": 5,
					"fail": 0
				},
				"response is not at sea": {
					"pass": 5,
					"fail": 0
				}
			}
		},
		{
			"name": "TEST 26: DELETE /slips/{{test9id}}",
			"id": "880c6673-2af3-e350-a8de-55c3944297c1",
			"url": "localhost:8080/slips/aghkZXZ-Tm9uZXIRCxIEU2xpcBiAgICAgJDECAw",
			"time": "92",
			"responseCode": {
				"code": 204,
				"name": "No Content",
				"detail": {
					"name": "No Content",
					"detail": "The server successfully processed the request, but is not returning any content."
				}
			},
			"testPassFailCounts": {
				"response is 204": {
					"pass": 5,
					"fail": 0
				}
			}
		},
		{
			"name": "TEST 27: GET /slips/{{test9id}}",
			"id": "005a3f63-35a3-3f2f-d55d-822cf1df6741",
			"url": "localhost:8080/slips/aghkZXZ-Tm9uZXIRCxIEU2xpcBiAgICAgJDECAw",
			"time": "35",
			"responseCode": {
				"code": 404,
				"name": "Not Found",
				"detail": {
					"name": "Not Found",
					"detail": "The requested resource could not be found but may be available again in the future. Subsequent requests by the client are permissible."
				}
			},
			"testPassFailCounts": {
				"response is ok": {
					"pass": 5,
					"fail": 0
				},
				"response has error": {
					"pass": 5,
					"fail": 0
				}
			}
		},
		{
			"name": "TEST 28: GET /boats/{{test2id}}",
			"id": "f48a5e5b-b76c-e19f-1be9-035eaaba0dd4",
			"url": "localhost:8080/boats/aghkZXZ-Tm9uZXIRCxIEQm9hdBiAgICAgJCECww",
			"time": "67",
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"testPassFailCounts": {
				"response is ok": {
					"pass": 5,
					"fail": 0
				},
				"response has body": {
					"pass": 5,
					"fail": 0
				},
				"response is at sea": {
					"pass": 5,
					"fail": 0
				}
			}
		},
		{
			"name": "/slips/",
			"id": "bf0738ab-78d7-1ecf-8e2c-e7fd2f9d8361",
			"url": "localhost:8080/slips/",
			"time": "29",
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"testPassFailCounts": {
				"response is ok": {
					"pass": 5,
					"fail": 0
				},
				"response has body": {
					"pass": 5,
					"fail": 0
				}
			}
		},
		{
			"name": "/boats/",
			"id": "799c9c3d-0ba9-8dc1-0002-4ae7cb2adcc3",
			"url": "localhost:8080/boats/",
			"time": "30",
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"testPassFailCounts": {
				"response is ok": {
					"pass": 5,
					"fail": 0
				},
				"response has body": {
					"pass": 5,
					"fail": 0
				}
			}
		},
		{
			"name": "400 - Extra Info - POST /boats/",
			"id": "48eb54ae-2f37-a672-827d-4a19fa86148a",
			"url": "localhost:8080/boats/",
			"time": "25",
			"responseCode": {
				"code": 400,
				"name": "Bad Request",
				"detail": {
					"name": "Bad Request",
					"detail": "The request cannot be fulfilled due to bad syntax."
				}
			},
			"testPassFailCounts": {
				"response is 400 Created": {
					"pass": 5,
					"fail": 0
				},
				"response has error": {
					"pass": 5,
					"fail": 0
				}
			}
		},
		{
			"name": "Verify /boats/ ",
			"id": "1b39ad28-302e-1fda-9a3a-ad7e4788f21f",
			"url": "localhost:8080/boats/",
			"time": "30",
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"testPassFailCounts": {
				"response is ok": {
					"pass": 5,
					"fail": 0
				},
				"response has body": {
					"pass": 5,
					"fail": 0
				},
				"response matches pre exactly": {
					"pass": 5,
					"fail": 0
				}
			}
		},
		{
			"name": "400 - Extra Info - POST /slips/",
			"id": "242117f3-e072-1ad9-eeb6-e6bbee009564",
			"url": "localhost:8080/slips/",
			"time": "18",
			"responseCode": {
				"code": 400,
				"name": "Bad Request",
				"detail": {
					"name": "Bad Request",
					"detail": "The request cannot be fulfilled due to bad syntax."
				}
			},
			"testPassFailCounts": {
				"response is 400 Created": {
					"pass": 5,
					"fail": 0
				},
				"response has error": {
					"pass": 5,
					"fail": 0
				}
			}
		},
		{
			"name": "Verify /slips/",
			"id": "3f82d081-8600-cb8f-1c11-a60ff7953f8d",
			"url": "localhost:8080/slips/",
			"time": "31",
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"testPassFailCounts": {
				"response is ok": {
					"pass": 5,
					"fail": 0
				},
				"response has body": {
					"pass": 5,
					"fail": 0
				},
				"response matches pre exactly": {
					"pass": 5,
					"fail": 0
				}
			}
		},
		{
			"name": "400 - Invalid Datatype - POST /boats/",
			"id": "7cb2638d-1011-5f26-2220-d55cdf64642a",
			"url": "localhost:8080/boats/",
			"time": "20",
			"responseCode": {
				"code": 400,
				"name": "Bad Request",
				"detail": {
					"name": "Bad Request",
					"detail": "The request cannot be fulfilled due to bad syntax."
				}
			},
			"testPassFailCounts": {
				"response is 400 Created": {
					"pass": 5,
					"fail": 0
				},
				"response has error": {
					"pass": 5,
					"fail": 0
				}
			}
		},
		{
			"name": "Verify /boats/",
			"id": "5e3cd318-aa7c-d2bd-05a0-a6e1b308e965",
			"url": "localhost:8080/boats/",
			"time": "39",
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"testPassFailCounts": {
				"response is ok": {
					"pass": 5,
					"fail": 0
				},
				"response has body": {
					"pass": 5,
					"fail": 0
				},
				"response matches pre exactly": {
					"pass": 5,
					"fail": 0
				}
			}
		},
		{
			"name": "400 - Invalid Data - POST /slips/",
			"id": "291f9012-9c21-2a6c-e728-6820cd8a4e43",
			"url": "localhost:8080/slips/",
			"time": "27",
			"responseCode": {
				"code": 400,
				"name": "Bad Request",
				"detail": {
					"name": "Bad Request",
					"detail": "The request cannot be fulfilled due to bad syntax."
				}
			},
			"testPassFailCounts": {
				"response is 400 Created": {
					"pass": 5,
					"fail": 0
				},
				"response has error": {
					"pass": 5,
					"fail": 0
				}
			}
		},
		{
			"name": "Verify /slips/",
			"id": "6586f52e-0ca8-42be-49b8-432183f2de64",
			"url": "localhost:8080/slips/",
			"time": "35",
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"testPassFailCounts": {
				"response is ok": {
					"pass": 5,
					"fail": 0
				},
				"response has body": {
					"pass": 5,
					"fail": 0
				},
				"response matches pre exactly": {
					"pass": 5,
					"fail": 0
				}
			}
		},
		{
			"name": "400 - Too Little 1 - POST /boats/",
			"id": "cc826b2e-8d1f-f4d4-a2f3-b22e721c4cd4",
			"url": "localhost:8080/boats/",
			"time": "18",
			"responseCode": {
				"code": 400,
				"name": "Bad Request",
				"detail": {
					"name": "Bad Request",
					"detail": "The request cannot be fulfilled due to bad syntax."
				}
			},
			"testPassFailCounts": {
				"response is 400 Created": {
					"pass": 5,
					"fail": 0
				},
				"response has error": {
					"pass": 5,
					"fail": 0
				}
			}
		},
		{
			"name": "Verify /boats/",
			"id": "10e67dac-fa94-69da-8492-15366fe0a788",
			"url": "localhost:8080/boats/",
			"time": "45",
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"testPassFailCounts": {
				"response is ok": {
					"pass": 5,
					"fail": 0
				},
				"response has body": {
					"pass": 5,
					"fail": 0
				},
				"response matches pre exactly": {
					"pass": 5,
					"fail": 0
				}
			}
		},
		{
			"name": "400 - Too Little 2 - POST /boats/",
			"id": "79eb9bdd-e846-8c59-3011-1958535b0486",
			"url": "localhost:8080/boats/",
			"time": "23",
			"responseCode": {
				"code": 400,
				"name": "Bad Request",
				"detail": {
					"name": "Bad Request",
					"detail": "The request cannot be fulfilled due to bad syntax."
				}
			},
			"testPassFailCounts": {
				"response is 400 Created": {
					"pass": 5,
					"fail": 0
				},
				"response has error": {
					"pass": 5,
					"fail": 0
				}
			}
		},
		{
			"name": "Verify /boats/",
			"id": "11d95291-802a-7e84-a762-0933a852e676",
			"url": "localhost:8080/boats/",
			"time": "56",
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"testPassFailCounts": {
				"response is ok": {
					"pass": 5,
					"fail": 0
				},
				"response has body": {
					"pass": 5,
					"fail": 0
				},
				"response matches pre exactly": {
					"pass": 5,
					"fail": 0
				}
			}
		},
		{
			"name": "400 - Too Little 3 - POST /boats/",
			"id": "2233d0fd-1dd1-cdf1-8434-4a3bdf106e62",
			"url": "localhost:8080/boats/",
			"time": "18",
			"responseCode": {
				"code": 400,
				"name": "Bad Request",
				"detail": {
					"name": "Bad Request",
					"detail": "The request cannot be fulfilled due to bad syntax."
				}
			},
			"testPassFailCounts": {
				"response is 400 Created": {
					"pass": 5,
					"fail": 0
				},
				"response has error": {
					"pass": 5,
					"fail": 0
				}
			}
		},
		{
			"name": "Verify /boats/",
			"id": "b334c6dc-9a92-155b-0639-917e68a968ea",
			"url": "localhost:8080/boats/",
			"time": "38",
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"testPassFailCounts": {
				"response is ok": {
					"pass": 5,
					"fail": 0
				},
				"response has body": {
					"pass": 5,
					"fail": 0
				},
				"response matches pre exactly": {
					"pass": 5,
					"fail": 0
				}
			}
		},
		{
			"name": "400 - Too Little - POST /slips/",
			"id": "af12af81-d7ec-99bf-53d5-29e559d7cfe7",
			"url": "localhost:8080/slips/",
			"time": "20",
			"responseCode": {
				"code": 400,
				"name": "Bad Request",
				"detail": {
					"name": "Bad Request",
					"detail": "The request cannot be fulfilled due to bad syntax."
				}
			},
			"testPassFailCounts": {
				"response is 400 Created": {
					"pass": 5,
					"fail": 0
				},
				"response has error": {
					"pass": 5,
					"fail": 0
				}
			}
		},
		{
			"name": "Verify /slips/",
			"id": "9ac03fed-6b33-8e35-9eda-9ba3df3e770d",
			"url": "localhost:8080/slips/",
			"time": "29",
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"testPassFailCounts": {
				"response is ok": {
					"pass": 5,
					"fail": 0
				},
				"response has body": {
					"pass": 5,
					"fail": 0
				},
				"response matches pre exactly": {
					"pass": 5,
					"fail": 0
				}
			}
		},
		{
			"name": "/slips/",
			"id": "3e0cabbc-97da-a5e2-9040-cea9765a7be6",
			"url": "localhost:8080/slips/",
			"time": "38",
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"testPassFailCounts": {
				"response is ok": {
					"pass": 5,
					"fail": 0
				},
				"response has body": {
					"pass": 5,
					"fail": 0
				}
			}
		},
		{
			"name": "/boats/",
			"id": "ee606220-9492-f505-9bb7-a3a4ebf16de0",
			"url": "localhost:8080/boats/",
			"time": "47",
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"testPassFailCounts": {
				"response is ok": {
					"pass": 5,
					"fail": 0
				},
				"response has body": {
					"pass": 5,
					"fail": 0
				}
			}
		},
		{
			"name": "404 /boats/{{fake_id}}",
			"id": "784cb22c-9f2a-b0f2-458d-593d333b1e4a",
			"url": "localhost:8080/boats/asdf1234",
			"time": "24",
			"responseCode": {
				"code": 404,
				"name": "Not Found",
				"detail": {
					"name": "Not Found",
					"detail": "The requested resource could not be found but may be available again in the future. Subsequent requests by the client are permissible."
				}
			},
			"testPassFailCounts": {
				"response is 404 Not Found": {
					"pass": 5,
					"fail": 0
				},
				"response has error": {
					"pass": 5,
					"fail": 0
				}
			}
		},
		{
			"name": "Verify /boats/",
			"id": "3ef77eb5-e79b-d713-8510-063f5452d4c6",
			"url": "localhost:8080/boats/",
			"time": "33",
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"testPassFailCounts": {
				"response is ok": {
					"pass": 5,
					"fail": 0
				},
				"response has body": {
					"pass": 5,
					"fail": 0
				},
				"response matches pre exactly": {
					"pass": 5,
					"fail": 0
				}
			}
		},
		{
			"name": "404 /slips/{{fake_id}}",
			"id": "59fbe851-2e79-2eb9-59f3-5fe2570a8e7f",
			"url": "localhost:8080/slips/asdf1234",
			"time": "26",
			"responseCode": {
				"code": 404,
				"name": "Not Found",
				"detail": {
					"name": "Not Found",
					"detail": "The requested resource could not be found but may be available again in the future. Subsequent requests by the client are permissible."
				}
			},
			"testPassFailCounts": {
				"response is 404 Not Found": {
					"pass": 5,
					"fail": 0
				},
				"response has error": {
					"pass": 5,
					"fail": 0
				}
			}
		},
		{
			"name": "Verify /slips/",
			"id": "230a57f3-e0db-d13e-9ae7-6ed2ff4c335c",
			"url": "localhost:8080/slips/",
			"time": "33",
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"testPassFailCounts": {
				"response is ok": {
					"pass": 5,
					"fail": 0
				},
				"response has body": {
					"pass": 5,
					"fail": 0
				},
				"response matches pre exactly": {
					"pass": 5,
					"fail": 0
				}
			}
		},
		{
			"name": "/boats/",
			"id": "7ce51c42-3d31-85e0-e5b5-59b2dcf4be53",
			"url": "localhost:8080/boats/",
			"time": "29",
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"testPassFailCounts": {
				"response is ok": {
					"pass": 5,
					"fail": 0
				},
				"response has body": {
					"pass": 5,
					"fail": 0
				}
			}
		},
		{
			"name": "/slips/",
			"id": "dc761673-648f-bf3a-3635-49f06c7538c4",
			"url": "localhost:8080/slips/",
			"time": "27",
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"testPassFailCounts": {
				"response is ok": {
					"pass": 5,
					"fail": 0
				},
				"response has body": {
					"pass": 5,
					"fail": 0
				}
			}
		},
		{
			"name": "404 /boats/{fake_id}",
			"id": "2b88311a-c5ff-cbbb-3d00-3a650e6521b0",
			"url": "localhost:8080/boats/asdf1234",
			"time": "29",
			"responseCode": {
				"code": 404,
				"name": "Not Found",
				"detail": {
					"name": "Not Found",
					"detail": "The requested resource could not be found but may be available again in the future. Subsequent requests by the client are permissible."
				}
			},
			"testPassFailCounts": {
				"response is 404 Not Found": {
					"pass": 5,
					"fail": 0
				},
				"response has error": {
					"pass": 5,
					"fail": 0
				}
			}
		},
		{
			"name": "404 /slips/{fake_id}",
			"id": "c2f7446f-6d6d-1178-b7df-94ced31f5733",
			"url": "localhost:8080/slips/asdf1234",
			"time": "19",
			"responseCode": {
				"code": 404,
				"name": "Not Found",
				"detail": {
					"name": "Not Found",
					"detail": "The requested resource could not be found but may be available again in the future. Subsequent requests by the client are permissible."
				}
			},
			"testPassFailCounts": {
				"response is 404 Not Found": {
					"pass": 5,
					"fail": 0
				},
				"response has error": {
					"pass": 5,
					"fail": 0
				}
			}
		},
		{
			"name": "Verify /boats/",
			"id": "fdfa7793-2127-ef7d-3028-aaae98af7856",
			"url": "localhost:8080/boats/",
			"time": "32",
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"testPassFailCounts": {
				"response is ok": {
					"pass": 5,
					"fail": 0
				},
				"response has body": {
					"pass": 5,
					"fail": 0
				},
				"response matches pre exactly": {
					"pass": 5,
					"fail": 0
				}
			}
		},
		{
			"name": "Verify /slips/",
			"id": "d10748ff-8105-071c-abb5-30bbbec709bc",
			"url": "localhost:8080/slips/",
			"time": "24",
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"testPassFailCounts": {
				"response is ok": {
					"pass": 5,
					"fail": 0
				},
				"response has body": {
					"pass": 5,
					"fail": 0
				},
				"response matches pre exactly": {
					"pass": 5,
					"fail": 0
				}
			}
		},
		{
			"name": "POST /boats/",
			"id": "449e63e6-d97d-5106-0587-b7ca93b4b887",
			"url": "localhost:8080/boats",
			"time": "43",
			"responseCode": {
				"code": 201,
				"name": "Created",
				"detail": {
					"name": "Created",
					"detail": "The request has been fulfilled and resulted in a new resource being created."
				}
			},
			"testPassFailCounts": {
				"response is 201 Created": {
					"pass": 5,
					"fail": 0
				},
				"response has body": {
					"pass": 5,
					"fail": 0
				},
				"response matches request": {
					"pass": 5,
					"fail": 0
				}
			}
		},
		{
			"name": "POST /slips/",
			"id": "e0020c68-d9c8-be7c-8bc3-ba665dbc3d52",
			"url": "localhost:8080/slips",
			"time": "35",
			"responseCode": {
				"code": 201,
				"name": "Created",
				"detail": {
					"name": "Created",
					"detail": "The request has been fulfilled and resulted in a new resource being created."
				}
			},
			"testPassFailCounts": {
				"response is 201 Created": {
					"pass": 5,
					"fail": 0
				},
				"response has body": {
					"pass": 5,
					"fail": 0
				},
				"response matches request": {
					"pass": 5,
					"fail": 0
				}
			}
		},
		{
			"name": "/slips/",
			"id": "63207568-8aa6-a081-88a5-7a8b4b2c5fb3",
			"url": "localhost:8080/slips/",
			"time": "43",
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"testPassFailCounts": {
				"response is ok": {
					"pass": 5,
					"fail": 0
				},
				"response has body": {
					"pass": 5,
					"fail": 0
				}
			}
		},
		{
			"name": "/boats/",
			"id": "556b949b-2ec2-73a0-c879-aeb34646fad2",
			"url": "localhost:8080/boats/",
			"time": "35",
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"testPassFailCounts": {
				"response is ok": {
					"pass": 5,
					"fail": 0
				},
				"response has body": {
					"pass": 5,
					"fail": 0
				}
			}
		},
		{
			"name": "400 EXTRA INFO  /boats/{boat_id}",
			"id": "44cc6da5-e4c6-6a9a-963c-a6ae835dadfe",
			"url": "localhost:8080/boats/aghkZXZ-Tm9uZXIRCxIEQm9hdBiAgICAgJDECgw",
			"time": "74",
			"responseCode": {
				"code": 400,
				"name": "Bad Request",
				"detail": {
					"name": "Bad Request",
					"detail": "The request cannot be fulfilled due to bad syntax."
				}
			},
			"testPassFailCounts": {
				"response is 404 Not Found": {
					"pass": 5,
					"fail": 0
				},
				"response has error": {
					"pass": 5,
					"fail": 0
				}
			}
		},
		{
			"name": "400 EXTRA INFO  /slips/{slip_id}",
			"id": "0cdc704a-51c0-c7dc-fa37-af168b756d8d",
			"url": "localhost:8080/slips/aghkZXZ-Tm9uZXIRCxIEU2xpcBiAgICAgJDECQw",
			"time": "59",
			"responseCode": {
				"code": 400,
				"name": "Bad Request",
				"detail": {
					"name": "Bad Request",
					"detail": "The request cannot be fulfilled due to bad syntax."
				}
			},
			"testPassFailCounts": {
				"response is 404 Not Found": {
					"pass": 5,
					"fail": 0
				},
				"response has error": {
					"pass": 5,
					"fail": 0
				}
			}
		},
		{
			"name": "400 - Invalid Data - PATCH /boats/{{boat_id}}",
			"id": "2f2d0eec-fec0-919c-463e-9ba77b558ee2",
			"url": "localhost:8080/boats/aghkZXZ-Tm9uZXIRCxIEQm9hdBiAgICAgJDECgw",
			"time": "39",
			"responseCode": {
				"code": 400,
				"name": "Bad Request",
				"detail": {
					"name": "Bad Request",
					"detail": "The request cannot be fulfilled due to bad syntax."
				}
			},
			"testPassFailCounts": {
				"response is 400 Created": {
					"pass": 5,
					"fail": 0
				},
				"response has error": {
					"pass": 5,
					"fail": 0
				}
			}
		},
		{
			"name": "400 - Invalid Data - PATCH /slips/{{slip_id}}",
			"id": "b54001cb-492d-1a3d-51b9-ca7d7f110d33",
			"url": "localhost:8080/slips/aghkZXZ-Tm9uZXIRCxIEU2xpcBiAgICAgJDECQw",
			"time": "34",
			"responseCode": {
				"code": 400,
				"name": "Bad Request",
				"detail": {
					"name": "Bad Request",
					"detail": "The request cannot be fulfilled due to bad syntax."
				}
			},
			"testPassFailCounts": {
				"response is 400 Created": {
					"pass": 5,
					"fail": 0
				},
				"response has error": {
					"pass": 5,
					"fail": 0
				}
			}
		},
		{
			"name": "Verify /boats/",
			"id": "eabd2c64-09b8-bccf-96f9-edc2293969d2",
			"url": "localhost:8080/boats/",
			"time": "47",
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"testPassFailCounts": {
				"response is ok": {
					"pass": 5,
					"fail": 0
				},
				"response has body": {
					"pass": 5,
					"fail": 0
				},
				"response matches pre exactly": {
					"pass": 5,
					"fail": 0
				}
			}
		},
		{
			"name": "Verify /slips/",
			"id": "3310d785-245f-011e-6040-bef0b42694f8",
			"url": "localhost:8080/slips/",
			"time": "33",
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"testPassFailCounts": {
				"response is ok": {
					"pass": 5,
					"fail": 0
				},
				"response has body": {
					"pass": 5,
					"fail": 0
				},
				"response matches pre exactly": {
					"pass": 5,
					"fail": 0
				}
			}
		},
		{
			"name": "CLEAN UP - Slips 2",
			"id": "92b72bbf-53ec-91c8-7956-feffedf85c55",
			"url": "http://localhost:8080/slips/aghkZXZ-Tm9uZXIRCxIEU2xpcBiAgICAgJDECQw",
			"time": "40",
			"responseCode": {
				"code": 204,
				"name": "No Content",
				"detail": {
					"name": "No Content",
					"detail": "The server successfully processed the request, but is not returning any content."
				}
			},
			"testPassFailCounts": {
				"response is 204": {
					"pass": 8,
					"fail": 0
				}
			}
		}
	],
	"synced": false
}